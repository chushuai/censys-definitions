// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#ifndef PROTOBUF_rpc_2eproto__INCLUDED
#define PROTOBUF_rpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "certificate.pb.h"
#include "anonstore.pb.h"
#include "hoststore.pb.h"
// @@protoc_insertion_point(includes)
namespace zsearch {
class ASAtom;
class ASAtomDefaultTypeInternal;
extern ASAtomDefaultTypeInternal _ASAtom_default_instance_;
class AnonymousDelta;
class AnonymousDeltaDefaultTypeInternal;
extern AnonymousDeltaDefaultTypeInternal _AnonymousDelta_default_instance_;
class AnonymousKey;
class AnonymousKeyDefaultTypeInternal;
extern AnonymousKeyDefaultTypeInternal _AnonymousKey_default_instance_;
class AnonymousQuery;
class AnonymousQueryDefaultTypeInternal;
extern AnonymousQueryDefaultTypeInternal _AnonymousQuery_default_instance_;
class AnonymousQueryResponse;
class AnonymousQueryResponseDefaultTypeInternal;
extern AnonymousQueryResponseDefaultTypeInternal _AnonymousQueryResponse_default_instance_;
class AnonymousRecord;
class AnonymousRecordDefaultTypeInternal;
extern AnonymousRecordDefaultTypeInternal _AnonymousRecord_default_instance_;
class AnonymousStoreStatistics;
class AnonymousStoreStatisticsDefaultTypeInternal;
extern AnonymousStoreStatisticsDefaultTypeInternal _AnonymousStoreStatistics_default_instance_;
class Certificate;
class CertificateDefaultTypeInternal;
extern CertificateDefaultTypeInternal _Certificate_default_instance_;
class CertificateAudit;
class CertificateAuditDefaultTypeInternal;
extern CertificateAuditDefaultTypeInternal _CertificateAudit_default_instance_;
class CertificateRevocation;
class CertificateRevocationDefaultTypeInternal;
extern CertificateRevocationDefaultTypeInternal _CertificateRevocation_default_instance_;
class CertificateValidation;
class CertificateValidationDefaultTypeInternal;
extern CertificateValidationDefaultTypeInternal _CertificateValidation_default_instance_;
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class CommandReply;
class CommandReplyDefaultTypeInternal;
extern CommandReplyDefaultTypeInternal _CommandReply_default_instance_;
class Delta;
class DeltaDefaultTypeInternal;
extern DeltaDefaultTypeInternal _Delta_default_instance_;
class ExternalCertificate;
class ExternalCertificateDefaultTypeInternal;
extern ExternalCertificateDefaultTypeInternal _ExternalCertificate_default_instance_;
class HostQuery;
class HostQueryDefaultTypeInternal;
extern HostQueryDefaultTypeInternal _HostQuery_default_instance_;
class HostQueryResponse;
class HostQueryResponseDefaultTypeInternal;
extern HostQueryResponseDefaultTypeInternal _HostQueryResponse_default_instance_;
class LocationAtom;
class LocationAtomDefaultTypeInternal;
extern LocationAtomDefaultTypeInternal _LocationAtom_default_instance_;
class Metadatum;
class MetadatumDefaultTypeInternal;
extern MetadatumDefaultTypeInternal _Metadatum_default_instance_;
class MinScanId;
class MinScanIdDefaultTypeInternal;
extern MinScanIdDefaultTypeInternal _MinScanId_default_instance_;
class MozillaOneCRLEntry;
class MozillaOneCRLEntryDefaultTypeInternal;
extern MozillaOneCRLEntryDefaultTypeInternal _MozillaOneCRLEntry_default_instance_;
class MozillaSalesForceStatus;
class MozillaSalesForceStatusDefaultTypeInternal;
extern MozillaSalesForceStatusDefaultTypeInternal _MozillaSalesForceStatus_default_instance_;
class Path;
class PathDefaultTypeInternal;
extern PathDefaultTypeInternal _Path_default_instance_;
class ProtocolAtom;
class ProtocolAtomDefaultTypeInternal;
extern ProtocolAtomDefaultTypeInternal _ProtocolAtom_default_instance_;
class PruneStatistics;
class PruneStatisticsDefaultTypeInternal;
extern PruneStatisticsDefaultTypeInternal _PruneStatistics_default_instance_;
class Record;
class RecordDefaultTypeInternal;
extern RecordDefaultTypeInternal _Record_default_instance_;
class RootStoreQuery;
class RootStoreQueryDefaultTypeInternal;
extern RootStoreQueryDefaultTypeInternal _RootStoreQuery_default_instance_;
class RootStoreReply;
class RootStoreReplyDefaultTypeInternal;
extern RootStoreReplyDefaultTypeInternal _RootStoreReply_default_instance_;
class RootStoreStatus;
class RootStoreStatusDefaultTypeInternal;
extern RootStoreStatusDefaultTypeInternal _RootStoreStatus_default_instance_;
class ServerStatistics;
class ServerStatisticsDefaultTypeInternal;
extern ServerStatisticsDefaultTypeInternal _ServerStatistics_default_instance_;
class ServerStatistics_AnonymousStoreStatisticsEntry;
class ServerStatistics_AnonymousStoreStatisticsEntryDefaultTypeInternal;
extern ServerStatistics_AnonymousStoreStatisticsEntryDefaultTypeInternal _ServerStatistics_AnonymousStoreStatisticsEntry_default_instance_;
class ServerStatistics_StoreStatisticsEntry;
class ServerStatistics_StoreStatisticsEntryDefaultTypeInternal;
extern ServerStatistics_StoreStatisticsEntryDefaultTypeInternal _ServerStatistics_StoreStatisticsEntry_default_instance_;
class StatisticsPair;
class StatisticsPairDefaultTypeInternal;
extern StatisticsPairDefaultTypeInternal _StatisticsPair_default_instance_;
class StoreStatistics;
class StoreStatisticsDefaultTypeInternal;
extern StoreStatisticsDefaultTypeInternal _StoreStatistics_default_instance_;
class UserDataRequest;
class UserDataRequestDefaultTypeInternal;
extern UserDataRequestDefaultTypeInternal _UserDataRequest_default_instance_;
class UserdataAtom;
class UserdataAtomDefaultTypeInternal;
extern UserdataAtomDefaultTypeInternal _UserdataAtom_default_instance_;
class WHOISAtom;
class WHOISAtomDefaultTypeInternal;
extern WHOISAtomDefaultTypeInternal _WHOISAtom_default_instance_;
}  // namespace zsearch

namespace zsearch {

namespace protobuf_rpc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_rpc_2eproto

enum CommandReply_CommandStatus {
  CommandReply_CommandStatus_FATAL = 0,
  CommandReply_CommandStatus_SUCCESS = 1,
  CommandReply_CommandStatus_ERROR = 2,
  CommandReply_CommandStatus_NO_RECORD = 3,
  CommandReply_CommandStatus_CommandReply_CommandStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommandReply_CommandStatus_CommandReply_CommandStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommandReply_CommandStatus_IsValid(int value);
const CommandReply_CommandStatus CommandReply_CommandStatus_CommandStatus_MIN = CommandReply_CommandStatus_FATAL;
const CommandReply_CommandStatus CommandReply_CommandStatus_CommandStatus_MAX = CommandReply_CommandStatus_NO_RECORD;
const int CommandReply_CommandStatus_CommandStatus_ARRAYSIZE = CommandReply_CommandStatus_CommandStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandReply_CommandStatus_descriptor();
inline const ::std::string& CommandReply_CommandStatus_Name(CommandReply_CommandStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandReply_CommandStatus_descriptor(), value);
}
inline bool CommandReply_CommandStatus_Parse(
    const ::std::string& name, CommandReply_CommandStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandReply_CommandStatus>(
    CommandReply_CommandStatus_descriptor(), name, value);
}
enum HostQueryResponse_ResponseStatus {
  HostQueryResponse_ResponseStatus_RESERVED = 0,
  HostQueryResponse_ResponseStatus_SUCCESS = 1,
  HostQueryResponse_ResponseStatus_NO_RECORD = 2,
  HostQueryResponse_ResponseStatus_ERROR = 3,
  HostQueryResponse_ResponseStatus_HostQueryResponse_ResponseStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HostQueryResponse_ResponseStatus_HostQueryResponse_ResponseStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HostQueryResponse_ResponseStatus_IsValid(int value);
const HostQueryResponse_ResponseStatus HostQueryResponse_ResponseStatus_ResponseStatus_MIN = HostQueryResponse_ResponseStatus_RESERVED;
const HostQueryResponse_ResponseStatus HostQueryResponse_ResponseStatus_ResponseStatus_MAX = HostQueryResponse_ResponseStatus_ERROR;
const int HostQueryResponse_ResponseStatus_ResponseStatus_ARRAYSIZE = HostQueryResponse_ResponseStatus_ResponseStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* HostQueryResponse_ResponseStatus_descriptor();
inline const ::std::string& HostQueryResponse_ResponseStatus_Name(HostQueryResponse_ResponseStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    HostQueryResponse_ResponseStatus_descriptor(), value);
}
inline bool HostQueryResponse_ResponseStatus_Parse(
    const ::std::string& name, HostQueryResponse_ResponseStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HostQueryResponse_ResponseStatus>(
    HostQueryResponse_ResponseStatus_descriptor(), name, value);
}
enum AnonymousQueryResponse_ResponseStatus {
  AnonymousQueryResponse_ResponseStatus_RESERVED = 0,
  AnonymousQueryResponse_ResponseStatus_SUCCESS = 1,
  AnonymousQueryResponse_ResponseStatus_NO_RECORD = 2,
  AnonymousQueryResponse_ResponseStatus_ERROR = 3,
  AnonymousQueryResponse_ResponseStatus_AnonymousQueryResponse_ResponseStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AnonymousQueryResponse_ResponseStatus_AnonymousQueryResponse_ResponseStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AnonymousQueryResponse_ResponseStatus_IsValid(int value);
const AnonymousQueryResponse_ResponseStatus AnonymousQueryResponse_ResponseStatus_ResponseStatus_MIN = AnonymousQueryResponse_ResponseStatus_RESERVED;
const AnonymousQueryResponse_ResponseStatus AnonymousQueryResponse_ResponseStatus_ResponseStatus_MAX = AnonymousQueryResponse_ResponseStatus_ERROR;
const int AnonymousQueryResponse_ResponseStatus_ResponseStatus_ARRAYSIZE = AnonymousQueryResponse_ResponseStatus_ResponseStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* AnonymousQueryResponse_ResponseStatus_descriptor();
inline const ::std::string& AnonymousQueryResponse_ResponseStatus_Name(AnonymousQueryResponse_ResponseStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    AnonymousQueryResponse_ResponseStatus_descriptor(), value);
}
inline bool AnonymousQueryResponse_ResponseStatus_Parse(
    const ::std::string& name, AnonymousQueryResponse_ResponseStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AnonymousQueryResponse_ResponseStatus>(
    AnonymousQueryResponse_ResponseStatus_descriptor(), name, value);
}
enum RootStoreQuery_RootStoreQueryType {
  RootStoreQuery_RootStoreQueryType_RESERVED = 0,
  RootStoreQuery_RootStoreQueryType_MOZILLA = 1,
  RootStoreQuery_RootStoreQueryType_MICROSOFT = 2,
  RootStoreQuery_RootStoreQueryType_APPLE = 3,
  RootStoreQuery_RootStoreQueryType_ALL = 4,
  RootStoreQuery_RootStoreQueryType_RootStoreQuery_RootStoreQueryType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RootStoreQuery_RootStoreQueryType_RootStoreQuery_RootStoreQueryType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RootStoreQuery_RootStoreQueryType_IsValid(int value);
const RootStoreQuery_RootStoreQueryType RootStoreQuery_RootStoreQueryType_RootStoreQueryType_MIN = RootStoreQuery_RootStoreQueryType_RESERVED;
const RootStoreQuery_RootStoreQueryType RootStoreQuery_RootStoreQueryType_RootStoreQueryType_MAX = RootStoreQuery_RootStoreQueryType_ALL;
const int RootStoreQuery_RootStoreQueryType_RootStoreQueryType_ARRAYSIZE = RootStoreQuery_RootStoreQueryType_RootStoreQueryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RootStoreQuery_RootStoreQueryType_descriptor();
inline const ::std::string& RootStoreQuery_RootStoreQueryType_Name(RootStoreQuery_RootStoreQueryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RootStoreQuery_RootStoreQueryType_descriptor(), value);
}
inline bool RootStoreQuery_RootStoreQueryType_Parse(
    const ::std::string& name, RootStoreQuery_RootStoreQueryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RootStoreQuery_RootStoreQueryType>(
    RootStoreQuery_RootStoreQueryType_descriptor(), name, value);
}
// ===================================================================

class MinScanId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.MinScanId) */ {
 public:
  MinScanId();
  virtual ~MinScanId();

  MinScanId(const MinScanId& from);

  inline MinScanId& operator=(const MinScanId& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MinScanId& default_instance();

  static inline const MinScanId* internal_default_instance() {
    return reinterpret_cast<const MinScanId*>(
               &_MinScanId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MinScanId* other);

  // implements Message ----------------------------------------------

  inline MinScanId* New() const PROTOBUF_FINAL { return New(NULL); }

  MinScanId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MinScanId& from);
  void MergeFrom(const MinScanId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MinScanId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zsearch.AnonymousKey key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::zsearch::AnonymousKey& key() const;
  ::zsearch::AnonymousKey* mutable_key();
  ::zsearch::AnonymousKey* release_key();
  void set_allocated_key(::zsearch::AnonymousKey* key);

  // uint32 min_scan_id = 2;
  void clear_min_scan_id();
  static const int kMinScanIdFieldNumber = 2;
  ::google::protobuf::uint32 min_scan_id() const;
  void set_min_scan_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zsearch.MinScanId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zsearch::AnonymousKey* key_;
  ::google::protobuf::uint32 min_scan_id_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MozillaOneCRLEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.MozillaOneCRLEntry) */ {
 public:
  MozillaOneCRLEntry();
  virtual ~MozillaOneCRLEntry();

  MozillaOneCRLEntry(const MozillaOneCRLEntry& from);

  inline MozillaOneCRLEntry& operator=(const MozillaOneCRLEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MozillaOneCRLEntry& default_instance();

  static inline const MozillaOneCRLEntry* internal_default_instance() {
    return reinterpret_cast<const MozillaOneCRLEntry*>(
               &_MozillaOneCRLEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MozillaOneCRLEntry* other);

  // implements Message ----------------------------------------------

  inline MozillaOneCRLEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  MozillaOneCRLEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MozillaOneCRLEntry& from);
  void MergeFrom(const MozillaOneCRLEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MozillaOneCRLEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes issuer = 1;
  void clear_issuer();
  static const int kIssuerFieldNumber = 1;
  const ::std::string& issuer() const;
  void set_issuer(const ::std::string& value);
  #if LANG_CXX11
  void set_issuer(::std::string&& value);
  #endif
  void set_issuer(const char* value);
  void set_issuer(const void* value, size_t size);
  ::std::string* mutable_issuer();
  ::std::string* release_issuer();
  void set_allocated_issuer(::std::string* issuer);

  // bytes serial = 2;
  void clear_serial();
  static const int kSerialFieldNumber = 2;
  const ::std::string& serial() const;
  void set_serial(const ::std::string& value);
  #if LANG_CXX11
  void set_serial(::std::string&& value);
  #endif
  void set_serial(const char* value);
  void set_serial(const void* value, size_t size);
  ::std::string* mutable_serial();
  ::std::string* release_serial();
  void set_allocated_serial(::std::string* serial);

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // uint32 last_modified = 4;
  void clear_last_modified();
  static const int kLastModifiedFieldNumber = 4;
  ::google::protobuf::uint32 last_modified() const;
  void set_last_modified(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zsearch.MozillaOneCRLEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr issuer_;
  ::google::protobuf::internal::ArenaStringPtr serial_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::uint32 last_modified_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Command* other);

  // implements Message ----------------------------------------------

  inline Command* New() const PROTOBUF_FINAL { return New(NULL); }

  Command* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zsearch.MinScanId min_scan_ids = 2;
  int min_scan_ids_size() const;
  void clear_min_scan_ids();
  static const int kMinScanIdsFieldNumber = 2;
  const ::zsearch::MinScanId& min_scan_ids(int index) const;
  ::zsearch::MinScanId* mutable_min_scan_ids(int index);
  ::zsearch::MinScanId* add_min_scan_ids();
  ::google::protobuf::RepeatedPtrField< ::zsearch::MinScanId >*
      mutable_min_scan_ids();
  const ::google::protobuf::RepeatedPtrField< ::zsearch::MinScanId >&
      min_scan_ids() const;

  // repeated .zsearch.MozillaOneCRLEntry one_crl_entries = 7;
  int one_crl_entries_size() const;
  void clear_one_crl_entries();
  static const int kOneCrlEntriesFieldNumber = 7;
  const ::zsearch::MozillaOneCRLEntry& one_crl_entries(int index) const;
  ::zsearch::MozillaOneCRLEntry* mutable_one_crl_entries(int index);
  ::zsearch::MozillaOneCRLEntry* add_one_crl_entries();
  ::google::protobuf::RepeatedPtrField< ::zsearch::MozillaOneCRLEntry >*
      mutable_one_crl_entries();
  const ::google::protobuf::RepeatedPtrField< ::zsearch::MozillaOneCRLEntry >&
      one_crl_entries() const;

  // string filepath = 3;
  void clear_filepath();
  static const int kFilepathFieldNumber = 3;
  const ::std::string& filepath() const;
  void set_filepath(const ::std::string& value);
  #if LANG_CXX11
  void set_filepath(::std::string&& value);
  #endif
  void set_filepath(const char* value);
  void set_filepath(const char* value, size_t size);
  ::std::string* mutable_filepath();
  ::std::string* release_filepath();
  void set_allocated_filepath(::std::string* filepath);

  // bool incremental_dump = 1;
  void clear_incremental_dump();
  static const int kIncrementalDumpFieldNumber = 1;
  bool incremental_dump() const;
  void set_incremental_dump(bool value);

  // uint32 max_records = 4;
  void clear_max_records();
  static const int kMaxRecordsFieldNumber = 4;
  ::google::protobuf::uint32 max_records() const;
  void set_max_records(::google::protobuf::uint32 value);

  // uint32 start_ip = 5;
  void clear_start_ip();
  static const int kStartIpFieldNumber = 5;
  ::google::protobuf::uint32 start_ip() const;
  void set_start_ip(::google::protobuf::uint32 value);

  // uint32 stop_ip = 6;
  void clear_stop_ip();
  static const int kStopIpFieldNumber = 6;
  ::google::protobuf::uint32 stop_ip() const;
  void set_stop_ip(::google::protobuf::uint32 value);

  // uint32 threads = 8;
  void clear_threads();
  static const int kThreadsFieldNumber = 8;
  ::google::protobuf::uint32 threads() const;
  void set_threads(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zsearch.Command)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zsearch::MinScanId > min_scan_ids_;
  ::google::protobuf::RepeatedPtrField< ::zsearch::MozillaOneCRLEntry > one_crl_entries_;
  ::google::protobuf::internal::ArenaStringPtr filepath_;
  bool incremental_dump_;
  ::google::protobuf::uint32 max_records_;
  ::google::protobuf::uint32 start_ip_;
  ::google::protobuf::uint32 stop_ip_;
  ::google::protobuf::uint32 threads_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnonymousStoreStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.AnonymousStoreStatistics) */ {
 public:
  AnonymousStoreStatistics();
  virtual ~AnonymousStoreStatistics();

  AnonymousStoreStatistics(const AnonymousStoreStatistics& from);

  inline AnonymousStoreStatistics& operator=(const AnonymousStoreStatistics& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnonymousStoreStatistics& default_instance();

  static inline const AnonymousStoreStatistics* internal_default_instance() {
    return reinterpret_cast<const AnonymousStoreStatistics*>(
               &_AnonymousStoreStatistics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AnonymousStoreStatistics* other);

  // implements Message ----------------------------------------------

  inline AnonymousStoreStatistics* New() const PROTOBUF_FINAL { return New(NULL); }

  AnonymousStoreStatistics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnonymousStoreStatistics& from);
  void MergeFrom(const AnonymousStoreStatistics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnonymousStoreStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string redis_queue_name = 7;
  void clear_redis_queue_name();
  static const int kRedisQueueNameFieldNumber = 7;
  const ::std::string& redis_queue_name() const;
  void set_redis_queue_name(const ::std::string& value);
  #if LANG_CXX11
  void set_redis_queue_name(::std::string&& value);
  #endif
  void set_redis_queue_name(const char* value);
  void set_redis_queue_name(const char* value, size_t size);
  ::std::string* mutable_redis_queue_name();
  ::std::string* release_redis_queue_name();
  void set_allocated_redis_queue_name(::std::string* redis_queue_name);

  // string queue_type = 8;
  void clear_queue_type();
  static const int kQueueTypeFieldNumber = 8;
  const ::std::string& queue_type() const;
  void set_queue_type(const ::std::string& value);
  #if LANG_CXX11
  void set_queue_type(::std::string&& value);
  #endif
  void set_queue_type(const char* value);
  void set_queue_type(const char* value, size_t size);
  ::std::string* mutable_queue_type();
  ::std::string* release_queue_type();
  void set_allocated_queue_type(::std::string* queue_type);

  // uint64 total_records = 1;
  void clear_total_records();
  static const int kTotalRecordsFieldNumber = 1;
  ::google::protobuf::uint64 total_records() const;
  void set_total_records(::google::protobuf::uint64 value);

  // uint64 records_added_last_reset = 2;
  void clear_records_added_last_reset();
  static const int kRecordsAddedLastResetFieldNumber = 2;
  ::google::protobuf::uint64 records_added_last_reset() const;
  void set_records_added_last_reset(::google::protobuf::uint64 value);

  // uint64 records_updated_last_reset = 3;
  void clear_records_updated_last_reset();
  static const int kRecordsUpdatedLastResetFieldNumber = 3;
  ::google::protobuf::uint64 records_updated_last_reset() const;
  void set_records_updated_last_reset(::google::protobuf::uint64 value);

  // uint64 records_unchanged_last_reset = 4;
  void clear_records_unchanged_last_reset();
  static const int kRecordsUnchangedLastResetFieldNumber = 4;
  ::google::protobuf::uint64 records_unchanged_last_reset() const;
  void set_records_unchanged_last_reset(::google::protobuf::uint64 value);

  // uint64 records_received = 5;
  void clear_records_received();
  static const int kRecordsReceivedFieldNumber = 5;
  ::google::protobuf::uint64 records_received() const;
  void set_records_received(::google::protobuf::uint64 value);

  // uint32 records_in_redis_queue = 6;
  void clear_records_in_redis_queue();
  static const int kRecordsInRedisQueueFieldNumber = 6;
  ::google::protobuf::uint32 records_in_redis_queue() const;
  void set_records_in_redis_queue(::google::protobuf::uint32 value);

  // uint32 worker_threads = 9;
  void clear_worker_threads();
  static const int kWorkerThreadsFieldNumber = 9;
  ::google::protobuf::uint32 worker_threads() const;
  void set_worker_threads(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zsearch.AnonymousStoreStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr redis_queue_name_;
  ::google::protobuf::internal::ArenaStringPtr queue_type_;
  ::google::protobuf::uint64 total_records_;
  ::google::protobuf::uint64 records_added_last_reset_;
  ::google::protobuf::uint64 records_updated_last_reset_;
  ::google::protobuf::uint64 records_unchanged_last_reset_;
  ::google::protobuf::uint64 records_received_;
  ::google::protobuf::uint32 records_in_redis_queue_;
  ::google::protobuf::uint32 worker_threads_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatisticsPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.StatisticsPair) */ {
 public:
  StatisticsPair();
  virtual ~StatisticsPair();

  StatisticsPair(const StatisticsPair& from);

  inline StatisticsPair& operator=(const StatisticsPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatisticsPair& default_instance();

  static inline const StatisticsPair* internal_default_instance() {
    return reinterpret_cast<const StatisticsPair*>(
               &_StatisticsPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(StatisticsPair* other);

  // implements Message ----------------------------------------------

  inline StatisticsPair* New() const PROTOBUF_FINAL { return New(NULL); }

  StatisticsPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StatisticsPair& from);
  void MergeFrom(const StatisticsPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StatisticsPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zsearch.AnonymousStoreStatistics statistics = 4;
  bool has_statistics() const;
  void clear_statistics();
  static const int kStatisticsFieldNumber = 4;
  const ::zsearch::AnonymousStoreStatistics& statistics() const;
  ::zsearch::AnonymousStoreStatistics* mutable_statistics();
  ::zsearch::AnonymousStoreStatistics* release_statistics();
  void set_allocated_statistics(::zsearch::AnonymousStoreStatistics* statistics);

  // uint32 port = 1;
  void clear_port();
  static const int kPortFieldNumber = 1;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // uint32 protocol = 2;
  void clear_protocol();
  static const int kProtocolFieldNumber = 2;
  ::google::protobuf::uint32 protocol() const;
  void set_protocol(::google::protobuf::uint32 value);

  // uint32 subprotocol = 3;
  void clear_subprotocol();
  static const int kSubprotocolFieldNumber = 3;
  ::google::protobuf::uint32 subprotocol() const;
  void set_subprotocol(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zsearch.StatisticsPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zsearch::AnonymousStoreStatistics* statistics_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 protocol_;
  ::google::protobuf::uint32 subprotocol_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StoreStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.StoreStatistics) */ {
 public:
  StoreStatistics();
  virtual ~StoreStatistics();

  StoreStatistics(const StoreStatistics& from);

  inline StoreStatistics& operator=(const StoreStatistics& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreStatistics& default_instance();

  static inline const StoreStatistics* internal_default_instance() {
    return reinterpret_cast<const StoreStatistics*>(
               &_StoreStatistics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(StoreStatistics* other);

  // implements Message ----------------------------------------------

  inline StoreStatistics* New() const PROTOBUF_FINAL { return New(NULL); }

  StoreStatistics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StoreStatistics& from);
  void MergeFrom(const StoreStatistics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StoreStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zsearch.StatisticsPair protocols = 2;
  int protocols_size() const;
  void clear_protocols();
  static const int kProtocolsFieldNumber = 2;
  const ::zsearch::StatisticsPair& protocols(int index) const;
  ::zsearch::StatisticsPair* mutable_protocols(int index);
  ::zsearch::StatisticsPair* add_protocols();
  ::google::protobuf::RepeatedPtrField< ::zsearch::StatisticsPair >*
      mutable_protocols();
  const ::google::protobuf::RepeatedPtrField< ::zsearch::StatisticsPair >&
      protocols() const;

  // .zsearch.AnonymousStoreStatistics global = 1;
  bool has_global() const;
  void clear_global();
  static const int kGlobalFieldNumber = 1;
  const ::zsearch::AnonymousStoreStatistics& global() const;
  ::zsearch::AnonymousStoreStatistics* mutable_global();
  ::zsearch::AnonymousStoreStatistics* release_global();
  void set_allocated_global(::zsearch::AnonymousStoreStatistics* global);

  // @@protoc_insertion_point(class_scope:zsearch.StoreStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zsearch::StatisticsPair > protocols_;
  ::zsearch::AnonymousStoreStatistics* global_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ServerStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.ServerStatistics) */ {
 public:
  ServerStatistics();
  virtual ~ServerStatistics();

  ServerStatistics(const ServerStatistics& from);

  inline ServerStatistics& operator=(const ServerStatistics& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStatistics& default_instance();

  static inline const ServerStatistics* internal_default_instance() {
    return reinterpret_cast<const ServerStatistics*>(
               &_ServerStatistics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ServerStatistics* other);

  // implements Message ----------------------------------------------

  inline ServerStatistics* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerStatistics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerStatistics& from);
  void MergeFrom(const ServerStatistics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .zsearch.StoreStatistics> store_statistics = 1;
  int store_statistics_size() const;
  void clear_store_statistics();
  static const int kStoreStatisticsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::zsearch::StoreStatistics >&
      store_statistics() const;
  ::google::protobuf::Map< ::std::string, ::zsearch::StoreStatistics >*
      mutable_store_statistics();

  // map<string, .zsearch.AnonymousStoreStatistics> anonymous_store_statistics = 2;
  int anonymous_store_statistics_size() const;
  void clear_anonymous_store_statistics();
  static const int kAnonymousStoreStatisticsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::zsearch::AnonymousStoreStatistics >&
      anonymous_store_statistics() const;
  ::google::protobuf::Map< ::std::string, ::zsearch::AnonymousStoreStatistics >*
      mutable_anonymous_store_statistics();

  // @@protoc_insertion_point(class_scope:zsearch.ServerStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class ServerStatistics_StoreStatisticsEntry : public ::google::protobuf::internal::MapEntry<ServerStatistics_StoreStatisticsEntry, 
      ::std::string, ::zsearch::StoreStatistics,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ServerStatistics_StoreStatisticsEntry, 
      ::std::string, ::zsearch::StoreStatistics,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ServerStatistics_StoreStatisticsEntry();
    ServerStatistics_StoreStatisticsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ServerStatistics_StoreStatisticsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ServerStatistics_StoreStatisticsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      ServerStatistics_StoreStatisticsEntry,
      ::std::string, ::zsearch::StoreStatistics,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > store_statistics_;
  private:
  public:
  class ServerStatistics_AnonymousStoreStatisticsEntry : public ::google::protobuf::internal::MapEntry<ServerStatistics_AnonymousStoreStatisticsEntry, 
      ::std::string, ::zsearch::AnonymousStoreStatistics,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ServerStatistics_AnonymousStoreStatisticsEntry, 
      ::std::string, ::zsearch::AnonymousStoreStatistics,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ServerStatistics_AnonymousStoreStatisticsEntry();
    ServerStatistics_AnonymousStoreStatisticsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ServerStatistics_AnonymousStoreStatisticsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ServerStatistics_AnonymousStoreStatisticsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      ServerStatistics_AnonymousStoreStatisticsEntry,
      ::std::string, ::zsearch::AnonymousStoreStatistics,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > anonymous_store_statistics_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PruneStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.PruneStatistics) */ {
 public:
  PruneStatistics();
  virtual ~PruneStatistics();

  PruneStatistics(const PruneStatistics& from);

  inline PruneStatistics& operator=(const PruneStatistics& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PruneStatistics& default_instance();

  static inline const PruneStatistics* internal_default_instance() {
    return reinterpret_cast<const PruneStatistics*>(
               &_PruneStatistics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(PruneStatistics* other);

  // implements Message ----------------------------------------------

  inline PruneStatistics* New() const PROTOBUF_FINAL { return New(NULL); }

  PruneStatistics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PruneStatistics& from);
  void MergeFrom(const PruneStatistics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PruneStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zsearch.AnonymousKey key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::zsearch::AnonymousKey& key() const;
  ::zsearch::AnonymousKey* mutable_key();
  ::zsearch::AnonymousKey* release_key();
  void set_allocated_key(::zsearch::AnonymousKey* key);

  // uint64 records_pruned = 2;
  void clear_records_pruned();
  static const int kRecordsPrunedFieldNumber = 2;
  ::google::protobuf::uint64 records_pruned() const;
  void set_records_pruned(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zsearch.PruneStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zsearch::AnonymousKey* key_;
  ::google::protobuf::uint64 records_pruned_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.CommandReply) */ {
 public:
  CommandReply();
  virtual ~CommandReply();

  CommandReply(const CommandReply& from);

  inline CommandReply& operator=(const CommandReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandReply& default_instance();

  static inline const CommandReply* internal_default_instance() {
    return reinterpret_cast<const CommandReply*>(
               &_CommandReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CommandReply* other);

  // implements Message ----------------------------------------------

  inline CommandReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CommandReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommandReply& from);
  void MergeFrom(const CommandReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommandReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CommandReply_CommandStatus CommandStatus;
  static const CommandStatus FATAL =
    CommandReply_CommandStatus_FATAL;
  static const CommandStatus SUCCESS =
    CommandReply_CommandStatus_SUCCESS;
  static const CommandStatus ERROR =
    CommandReply_CommandStatus_ERROR;
  static const CommandStatus NO_RECORD =
    CommandReply_CommandStatus_NO_RECORD;
  static inline bool CommandStatus_IsValid(int value) {
    return CommandReply_CommandStatus_IsValid(value);
  }
  static const CommandStatus CommandStatus_MIN =
    CommandReply_CommandStatus_CommandStatus_MIN;
  static const CommandStatus CommandStatus_MAX =
    CommandReply_CommandStatus_CommandStatus_MAX;
  static const int CommandStatus_ARRAYSIZE =
    CommandReply_CommandStatus_CommandStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CommandStatus_descriptor() {
    return CommandReply_CommandStatus_descriptor();
  }
  static inline const ::std::string& CommandStatus_Name(CommandStatus value) {
    return CommandReply_CommandStatus_Name(value);
  }
  static inline bool CommandStatus_Parse(const ::std::string& name,
      CommandStatus* value) {
    return CommandReply_CommandStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .zsearch.PruneStatistics prune_statistics = 4;
  int prune_statistics_size() const;
  void clear_prune_statistics();
  static const int kPruneStatisticsFieldNumber = 4;
  const ::zsearch::PruneStatistics& prune_statistics(int index) const;
  ::zsearch::PruneStatistics* mutable_prune_statistics(int index);
  ::zsearch::PruneStatistics* add_prune_statistics();
  ::google::protobuf::RepeatedPtrField< ::zsearch::PruneStatistics >*
      mutable_prune_statistics();
  const ::google::protobuf::RepeatedPtrField< ::zsearch::PruneStatistics >&
      prune_statistics() const;

  // string error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // .zsearch.ServerStatistics stats = 3;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 3;
  const ::zsearch::ServerStatistics& stats() const;
  ::zsearch::ServerStatistics* mutable_stats();
  ::zsearch::ServerStatistics* release_stats();
  void set_allocated_stats(::zsearch::ServerStatistics* stats);

  // .zsearch.CommandReply.CommandStatus status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::zsearch::CommandReply_CommandStatus status() const;
  void set_status(::zsearch::CommandReply_CommandStatus value);

  // @@protoc_insertion_point(class_scope:zsearch.CommandReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zsearch::PruneStatistics > prune_statistics_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::zsearch::ServerStatistics* stats_;
  int status_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HostQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.HostQuery) */ {
 public:
  HostQuery();
  virtual ~HostQuery();

  HostQuery(const HostQuery& from);

  inline HostQuery& operator=(const HostQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HostQuery& default_instance();

  static inline const HostQuery* internal_default_instance() {
    return reinterpret_cast<const HostQuery*>(
               &_HostQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(HostQuery* other);

  // implements Message ----------------------------------------------

  inline HostQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  HostQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HostQuery& from);
  void MergeFrom(const HostQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HostQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // fixed32 ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // uint32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // uint32 protocol = 4;
  void clear_protocol();
  static const int kProtocolFieldNumber = 4;
  ::google::protobuf::uint32 protocol() const;
  void set_protocol(::google::protobuf::uint32 value);

  // uint32 subprotocol = 5;
  void clear_subprotocol();
  static const int kSubprotocolFieldNumber = 5;
  ::google::protobuf::uint32 subprotocol() const;
  void set_subprotocol(::google::protobuf::uint32 value);

  // uint32 max_records = 6;
  void clear_max_records();
  static const int kMaxRecordsFieldNumber = 6;
  ::google::protobuf::uint32 max_records() const;
  void set_max_records(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zsearch.HostQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 protocol_;
  ::google::protobuf::uint32 subprotocol_;
  ::google::protobuf::uint32 max_records_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HostQueryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.HostQueryResponse) */ {
 public:
  HostQueryResponse();
  virtual ~HostQueryResponse();

  HostQueryResponse(const HostQueryResponse& from);

  inline HostQueryResponse& operator=(const HostQueryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HostQueryResponse& default_instance();

  static inline const HostQueryResponse* internal_default_instance() {
    return reinterpret_cast<const HostQueryResponse*>(
               &_HostQueryResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(HostQueryResponse* other);

  // implements Message ----------------------------------------------

  inline HostQueryResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  HostQueryResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HostQueryResponse& from);
  void MergeFrom(const HostQueryResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HostQueryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HostQueryResponse_ResponseStatus ResponseStatus;
  static const ResponseStatus RESERVED =
    HostQueryResponse_ResponseStatus_RESERVED;
  static const ResponseStatus SUCCESS =
    HostQueryResponse_ResponseStatus_SUCCESS;
  static const ResponseStatus NO_RECORD =
    HostQueryResponse_ResponseStatus_NO_RECORD;
  static const ResponseStatus ERROR =
    HostQueryResponse_ResponseStatus_ERROR;
  static inline bool ResponseStatus_IsValid(int value) {
    return HostQueryResponse_ResponseStatus_IsValid(value);
  }
  static const ResponseStatus ResponseStatus_MIN =
    HostQueryResponse_ResponseStatus_ResponseStatus_MIN;
  static const ResponseStatus ResponseStatus_MAX =
    HostQueryResponse_ResponseStatus_ResponseStatus_MAX;
  static const int ResponseStatus_ARRAYSIZE =
    HostQueryResponse_ResponseStatus_ResponseStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseStatus_descriptor() {
    return HostQueryResponse_ResponseStatus_descriptor();
  }
  static inline const ::std::string& ResponseStatus_Name(ResponseStatus value) {
    return HostQueryResponse_ResponseStatus_Name(value);
  }
  static inline bool ResponseStatus_Parse(const ::std::string& name,
      ResponseStatus* value) {
    return HostQueryResponse_ResponseStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .zsearch.Record records = 8;
  int records_size() const;
  void clear_records();
  static const int kRecordsFieldNumber = 8;
  const ::zsearch::Record& records(int index) const;
  ::zsearch::Record* mutable_records(int index);
  ::zsearch::Record* add_records();
  ::google::protobuf::RepeatedPtrField< ::zsearch::Record >*
      mutable_records();
  const ::google::protobuf::RepeatedPtrField< ::zsearch::Record >&
      records() const;

  // string domain = 3;
  void clear_domain();
  static const int kDomainFieldNumber = 3;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // string error = 9;
  void clear_error();
  static const int kErrorFieldNumber = 9;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // .zsearch.Record record = 7;
  bool has_record() const;
  void clear_record();
  static const int kRecordFieldNumber = 7;
  const ::zsearch::Record& record() const;
  ::zsearch::Record* mutable_record();
  ::zsearch::Record* release_record();
  void set_allocated_record(::zsearch::Record* record);

  // .zsearch.HostQueryResponse.ResponseStatus status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::zsearch::HostQueryResponse_ResponseStatus status() const;
  void set_status(::zsearch::HostQueryResponse_ResponseStatus value);

  // fixed32 ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // uint32 protocol = 5;
  void clear_protocol();
  static const int kProtocolFieldNumber = 5;
  ::google::protobuf::uint32 protocol() const;
  void set_protocol(::google::protobuf::uint32 value);

  // uint32 subprotocol = 6;
  void clear_subprotocol();
  static const int kSubprotocolFieldNumber = 6;
  ::google::protobuf::uint32 subprotocol() const;
  void set_subprotocol(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zsearch.HostQueryResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zsearch::Record > records_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::zsearch::Record* record_;
  int status_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 protocol_;
  ::google::protobuf::uint32 subprotocol_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnonymousQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.AnonymousQuery) */ {
 public:
  AnonymousQuery();
  virtual ~AnonymousQuery();

  AnonymousQuery(const AnonymousQuery& from);

  inline AnonymousQuery& operator=(const AnonymousQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnonymousQuery& default_instance();

  static inline const AnonymousQuery* internal_default_instance() {
    return reinterpret_cast<const AnonymousQuery*>(
               &_AnonymousQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(AnonymousQuery* other);

  // implements Message ----------------------------------------------

  inline AnonymousQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  AnonymousQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnonymousQuery& from);
  void MergeFrom(const AnonymousQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnonymousQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes sha256fp = 1;
  void clear_sha256fp();
  static const int kSha256FpFieldNumber = 1;
  const ::std::string& sha256fp() const;
  void set_sha256fp(const ::std::string& value);
  #if LANG_CXX11
  void set_sha256fp(::std::string&& value);
  #endif
  void set_sha256fp(const char* value);
  void set_sha256fp(const void* value, size_t size);
  ::std::string* mutable_sha256fp();
  ::std::string* release_sha256fp();
  void set_allocated_sha256fp(::std::string* sha256fp);

  // @@protoc_insertion_point(class_scope:zsearch.AnonymousQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sha256fp_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnonymousQueryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.AnonymousQueryResponse) */ {
 public:
  AnonymousQueryResponse();
  virtual ~AnonymousQueryResponse();

  AnonymousQueryResponse(const AnonymousQueryResponse& from);

  inline AnonymousQueryResponse& operator=(const AnonymousQueryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnonymousQueryResponse& default_instance();

  static inline const AnonymousQueryResponse* internal_default_instance() {
    return reinterpret_cast<const AnonymousQueryResponse*>(
               &_AnonymousQueryResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(AnonymousQueryResponse* other);

  // implements Message ----------------------------------------------

  inline AnonymousQueryResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AnonymousQueryResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnonymousQueryResponse& from);
  void MergeFrom(const AnonymousQueryResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnonymousQueryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AnonymousQueryResponse_ResponseStatus ResponseStatus;
  static const ResponseStatus RESERVED =
    AnonymousQueryResponse_ResponseStatus_RESERVED;
  static const ResponseStatus SUCCESS =
    AnonymousQueryResponse_ResponseStatus_SUCCESS;
  static const ResponseStatus NO_RECORD =
    AnonymousQueryResponse_ResponseStatus_NO_RECORD;
  static const ResponseStatus ERROR =
    AnonymousQueryResponse_ResponseStatus_ERROR;
  static inline bool ResponseStatus_IsValid(int value) {
    return AnonymousQueryResponse_ResponseStatus_IsValid(value);
  }
  static const ResponseStatus ResponseStatus_MIN =
    AnonymousQueryResponse_ResponseStatus_ResponseStatus_MIN;
  static const ResponseStatus ResponseStatus_MAX =
    AnonymousQueryResponse_ResponseStatus_ResponseStatus_MAX;
  static const int ResponseStatus_ARRAYSIZE =
    AnonymousQueryResponse_ResponseStatus_ResponseStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseStatus_descriptor() {
    return AnonymousQueryResponse_ResponseStatus_descriptor();
  }
  static inline const ::std::string& ResponseStatus_Name(ResponseStatus value) {
    return AnonymousQueryResponse_ResponseStatus_Name(value);
  }
  static inline bool ResponseStatus_Parse(const ::std::string& name,
      ResponseStatus* value) {
    return AnonymousQueryResponse_ResponseStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .zsearch.AnonymousRecord records = 4;
  int records_size() const;
  void clear_records();
  static const int kRecordsFieldNumber = 4;
  const ::zsearch::AnonymousRecord& records(int index) const;
  ::zsearch::AnonymousRecord* mutable_records(int index);
  ::zsearch::AnonymousRecord* add_records();
  ::google::protobuf::RepeatedPtrField< ::zsearch::AnonymousRecord >*
      mutable_records();
  const ::google::protobuf::RepeatedPtrField< ::zsearch::AnonymousRecord >&
      records() const;

  // bytes sha256fp = 1;
  void clear_sha256fp();
  static const int kSha256FpFieldNumber = 1;
  const ::std::string& sha256fp() const;
  void set_sha256fp(const ::std::string& value);
  #if LANG_CXX11
  void set_sha256fp(::std::string&& value);
  #endif
  void set_sha256fp(const char* value);
  void set_sha256fp(const void* value, size_t size);
  ::std::string* mutable_sha256fp();
  ::std::string* release_sha256fp();
  void set_allocated_sha256fp(::std::string* sha256fp);

  // string error = 59;
  void clear_error();
  static const int kErrorFieldNumber = 59;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // .zsearch.AnonymousRecord record = 3;
  bool has_record() const;
  void clear_record();
  static const int kRecordFieldNumber = 3;
  const ::zsearch::AnonymousRecord& record() const;
  ::zsearch::AnonymousRecord* mutable_record();
  ::zsearch::AnonymousRecord* release_record();
  void set_allocated_record(::zsearch::AnonymousRecord* record);

  // .zsearch.AnonymousQueryResponse.ResponseStatus status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::zsearch::AnonymousQueryResponse_ResponseStatus status() const;
  void set_status(::zsearch::AnonymousQueryResponse_ResponseStatus value);

  // @@protoc_insertion_point(class_scope:zsearch.AnonymousQueryResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zsearch::AnonymousRecord > records_;
  ::google::protobuf::internal::ArenaStringPtr sha256fp_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::zsearch::AnonymousRecord* record_;
  int status_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.UserDataRequest) */ {
 public:
  UserDataRequest();
  virtual ~UserDataRequest();

  UserDataRequest(const UserDataRequest& from);

  inline UserDataRequest& operator=(const UserDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDataRequest& default_instance();

  static inline const UserDataRequest* internal_default_instance() {
    return reinterpret_cast<const UserDataRequest*>(
               &_UserDataRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(UserDataRequest* other);

  // implements Message ----------------------------------------------

  inline UserDataRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UserDataRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserDataRequest& from);
  void MergeFrom(const UserDataRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // .zsearch.UserdataAtom data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::zsearch::UserdataAtom& data() const;
  ::zsearch::UserdataAtom* mutable_data();
  ::zsearch::UserdataAtom* release_data();
  void set_allocated_data(::zsearch::UserdataAtom* data);

  // fixed32 ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zsearch.UserDataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::zsearch::UserdataAtom* data_;
  ::google::protobuf::uint32 ip_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RootStoreQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.RootStoreQuery) */ {
 public:
  RootStoreQuery();
  virtual ~RootStoreQuery();

  RootStoreQuery(const RootStoreQuery& from);

  inline RootStoreQuery& operator=(const RootStoreQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RootStoreQuery& default_instance();

  static inline const RootStoreQuery* internal_default_instance() {
    return reinterpret_cast<const RootStoreQuery*>(
               &_RootStoreQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(RootStoreQuery* other);

  // implements Message ----------------------------------------------

  inline RootStoreQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  RootStoreQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RootStoreQuery& from);
  void MergeFrom(const RootStoreQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RootStoreQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RootStoreQuery_RootStoreQueryType RootStoreQueryType;
  static const RootStoreQueryType RESERVED =
    RootStoreQuery_RootStoreQueryType_RESERVED;
  static const RootStoreQueryType MOZILLA =
    RootStoreQuery_RootStoreQueryType_MOZILLA;
  static const RootStoreQueryType MICROSOFT =
    RootStoreQuery_RootStoreQueryType_MICROSOFT;
  static const RootStoreQueryType APPLE =
    RootStoreQuery_RootStoreQueryType_APPLE;
  static const RootStoreQueryType ALL =
    RootStoreQuery_RootStoreQueryType_ALL;
  static inline bool RootStoreQueryType_IsValid(int value) {
    return RootStoreQuery_RootStoreQueryType_IsValid(value);
  }
  static const RootStoreQueryType RootStoreQueryType_MIN =
    RootStoreQuery_RootStoreQueryType_RootStoreQueryType_MIN;
  static const RootStoreQueryType RootStoreQueryType_MAX =
    RootStoreQuery_RootStoreQueryType_RootStoreQueryType_MAX;
  static const int RootStoreQueryType_ARRAYSIZE =
    RootStoreQuery_RootStoreQueryType_RootStoreQueryType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RootStoreQueryType_descriptor() {
    return RootStoreQuery_RootStoreQueryType_descriptor();
  }
  static inline const ::std::string& RootStoreQueryType_Name(RootStoreQueryType value) {
    return RootStoreQuery_RootStoreQueryType_Name(value);
  }
  static inline bool RootStoreQueryType_Parse(const ::std::string& name,
      RootStoreQueryType* value) {
    return RootStoreQuery_RootStoreQueryType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .zsearch.RootStoreQuery.RootStoreQueryType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::zsearch::RootStoreQuery_RootStoreQueryType type() const;
  void set_type(::zsearch::RootStoreQuery_RootStoreQueryType value);

  // @@protoc_insertion_point(class_scope:zsearch.RootStoreQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RootStoreReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zsearch.RootStoreReply) */ {
 public:
  RootStoreReply();
  virtual ~RootStoreReply();

  RootStoreReply(const RootStoreReply& from);

  inline RootStoreReply& operator=(const RootStoreReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RootStoreReply& default_instance();

  static inline const RootStoreReply* internal_default_instance() {
    return reinterpret_cast<const RootStoreReply*>(
               &_RootStoreReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(RootStoreReply* other);

  // implements Message ----------------------------------------------

  inline RootStoreReply* New() const PROTOBUF_FINAL { return New(NULL); }

  RootStoreReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RootStoreReply& from);
  void MergeFrom(const RootStoreReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RootStoreReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zsearch.Certificate certificates = 1;
  int certificates_size() const;
  void clear_certificates();
  static const int kCertificatesFieldNumber = 1;
  const ::zsearch::Certificate& certificates(int index) const;
  ::zsearch::Certificate* mutable_certificates(int index);
  ::zsearch::Certificate* add_certificates();
  ::google::protobuf::RepeatedPtrField< ::zsearch::Certificate >*
      mutable_certificates();
  const ::google::protobuf::RepeatedPtrField< ::zsearch::Certificate >&
      certificates() const;

  // @@protoc_insertion_point(class_scope:zsearch.RootStoreReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zsearch::Certificate > certificates_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MinScanId

// .zsearch.AnonymousKey key = 1;
inline bool MinScanId::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void MinScanId::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::zsearch::AnonymousKey& MinScanId::key() const {
  // @@protoc_insertion_point(field_get:zsearch.MinScanId.key)
  return key_ != NULL ? *key_
                         : *::zsearch::AnonymousKey::internal_default_instance();
}
inline ::zsearch::AnonymousKey* MinScanId::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::zsearch::AnonymousKey;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.MinScanId.key)
  return key_;
}
inline ::zsearch::AnonymousKey* MinScanId::release_key() {
  // @@protoc_insertion_point(field_release:zsearch.MinScanId.key)
  
  ::zsearch::AnonymousKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline void MinScanId::set_allocated_key(::zsearch::AnonymousKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.MinScanId.key)
}

// uint32 min_scan_id = 2;
inline void MinScanId::clear_min_scan_id() {
  min_scan_id_ = 0u;
}
inline ::google::protobuf::uint32 MinScanId::min_scan_id() const {
  // @@protoc_insertion_point(field_get:zsearch.MinScanId.min_scan_id)
  return min_scan_id_;
}
inline void MinScanId::set_min_scan_id(::google::protobuf::uint32 value) {
  
  min_scan_id_ = value;
  // @@protoc_insertion_point(field_set:zsearch.MinScanId.min_scan_id)
}

// -------------------------------------------------------------------

// MozillaOneCRLEntry

// bytes issuer = 1;
inline void MozillaOneCRLEntry::clear_issuer() {
  issuer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MozillaOneCRLEntry::issuer() const {
  // @@protoc_insertion_point(field_get:zsearch.MozillaOneCRLEntry.issuer)
  return issuer_.GetNoArena();
}
inline void MozillaOneCRLEntry::set_issuer(const ::std::string& value) {
  
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.MozillaOneCRLEntry.issuer)
}
#if LANG_CXX11
inline void MozillaOneCRLEntry::set_issuer(::std::string&& value) {
  
  issuer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.MozillaOneCRLEntry.issuer)
}
#endif
inline void MozillaOneCRLEntry::set_issuer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.MozillaOneCRLEntry.issuer)
}
inline void MozillaOneCRLEntry::set_issuer(const void* value, size_t size) {
  
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.MozillaOneCRLEntry.issuer)
}
inline ::std::string* MozillaOneCRLEntry::mutable_issuer() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.MozillaOneCRLEntry.issuer)
  return issuer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MozillaOneCRLEntry::release_issuer() {
  // @@protoc_insertion_point(field_release:zsearch.MozillaOneCRLEntry.issuer)
  
  return issuer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MozillaOneCRLEntry::set_allocated_issuer(::std::string* issuer) {
  if (issuer != NULL) {
    
  } else {
    
  }
  issuer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), issuer);
  // @@protoc_insertion_point(field_set_allocated:zsearch.MozillaOneCRLEntry.issuer)
}

// bytes serial = 2;
inline void MozillaOneCRLEntry::clear_serial() {
  serial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MozillaOneCRLEntry::serial() const {
  // @@protoc_insertion_point(field_get:zsearch.MozillaOneCRLEntry.serial)
  return serial_.GetNoArena();
}
inline void MozillaOneCRLEntry::set_serial(const ::std::string& value) {
  
  serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.MozillaOneCRLEntry.serial)
}
#if LANG_CXX11
inline void MozillaOneCRLEntry::set_serial(::std::string&& value) {
  
  serial_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.MozillaOneCRLEntry.serial)
}
#endif
inline void MozillaOneCRLEntry::set_serial(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.MozillaOneCRLEntry.serial)
}
inline void MozillaOneCRLEntry::set_serial(const void* value, size_t size) {
  
  serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.MozillaOneCRLEntry.serial)
}
inline ::std::string* MozillaOneCRLEntry::mutable_serial() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.MozillaOneCRLEntry.serial)
  return serial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MozillaOneCRLEntry::release_serial() {
  // @@protoc_insertion_point(field_release:zsearch.MozillaOneCRLEntry.serial)
  
  return serial_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MozillaOneCRLEntry::set_allocated_serial(::std::string* serial) {
  if (serial != NULL) {
    
  } else {
    
  }
  serial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serial);
  // @@protoc_insertion_point(field_set_allocated:zsearch.MozillaOneCRLEntry.serial)
}

// string id = 3;
inline void MozillaOneCRLEntry::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MozillaOneCRLEntry::id() const {
  // @@protoc_insertion_point(field_get:zsearch.MozillaOneCRLEntry.id)
  return id_.GetNoArena();
}
inline void MozillaOneCRLEntry::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.MozillaOneCRLEntry.id)
}
#if LANG_CXX11
inline void MozillaOneCRLEntry::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.MozillaOneCRLEntry.id)
}
#endif
inline void MozillaOneCRLEntry::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.MozillaOneCRLEntry.id)
}
inline void MozillaOneCRLEntry::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.MozillaOneCRLEntry.id)
}
inline ::std::string* MozillaOneCRLEntry::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.MozillaOneCRLEntry.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MozillaOneCRLEntry::release_id() {
  // @@protoc_insertion_point(field_release:zsearch.MozillaOneCRLEntry.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MozillaOneCRLEntry::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:zsearch.MozillaOneCRLEntry.id)
}

// uint32 last_modified = 4;
inline void MozillaOneCRLEntry::clear_last_modified() {
  last_modified_ = 0u;
}
inline ::google::protobuf::uint32 MozillaOneCRLEntry::last_modified() const {
  // @@protoc_insertion_point(field_get:zsearch.MozillaOneCRLEntry.last_modified)
  return last_modified_;
}
inline void MozillaOneCRLEntry::set_last_modified(::google::protobuf::uint32 value) {
  
  last_modified_ = value;
  // @@protoc_insertion_point(field_set:zsearch.MozillaOneCRLEntry.last_modified)
}

// -------------------------------------------------------------------

// Command

// bool incremental_dump = 1;
inline void Command::clear_incremental_dump() {
  incremental_dump_ = false;
}
inline bool Command::incremental_dump() const {
  // @@protoc_insertion_point(field_get:zsearch.Command.incremental_dump)
  return incremental_dump_;
}
inline void Command::set_incremental_dump(bool value) {
  
  incremental_dump_ = value;
  // @@protoc_insertion_point(field_set:zsearch.Command.incremental_dump)
}

// repeated .zsearch.MinScanId min_scan_ids = 2;
inline int Command::min_scan_ids_size() const {
  return min_scan_ids_.size();
}
inline void Command::clear_min_scan_ids() {
  min_scan_ids_.Clear();
}
inline const ::zsearch::MinScanId& Command::min_scan_ids(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.Command.min_scan_ids)
  return min_scan_ids_.Get(index);
}
inline ::zsearch::MinScanId* Command::mutable_min_scan_ids(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.Command.min_scan_ids)
  return min_scan_ids_.Mutable(index);
}
inline ::zsearch::MinScanId* Command::add_min_scan_ids() {
  // @@protoc_insertion_point(field_add:zsearch.Command.min_scan_ids)
  return min_scan_ids_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zsearch::MinScanId >*
Command::mutable_min_scan_ids() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.Command.min_scan_ids)
  return &min_scan_ids_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zsearch::MinScanId >&
Command::min_scan_ids() const {
  // @@protoc_insertion_point(field_list:zsearch.Command.min_scan_ids)
  return min_scan_ids_;
}

// string filepath = 3;
inline void Command::clear_filepath() {
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Command::filepath() const {
  // @@protoc_insertion_point(field_get:zsearch.Command.filepath)
  return filepath_.GetNoArena();
}
inline void Command::set_filepath(const ::std::string& value) {
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.Command.filepath)
}
#if LANG_CXX11
inline void Command::set_filepath(::std::string&& value) {
  
  filepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.Command.filepath)
}
#endif
inline void Command::set_filepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.Command.filepath)
}
inline void Command::set_filepath(const char* value, size_t size) {
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.Command.filepath)
}
inline ::std::string* Command::mutable_filepath() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.Command.filepath)
  return filepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Command::release_filepath() {
  // @@protoc_insertion_point(field_release:zsearch.Command.filepath)
  
  return filepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Command::set_allocated_filepath(::std::string* filepath) {
  if (filepath != NULL) {
    
  } else {
    
  }
  filepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filepath);
  // @@protoc_insertion_point(field_set_allocated:zsearch.Command.filepath)
}

// uint32 max_records = 4;
inline void Command::clear_max_records() {
  max_records_ = 0u;
}
inline ::google::protobuf::uint32 Command::max_records() const {
  // @@protoc_insertion_point(field_get:zsearch.Command.max_records)
  return max_records_;
}
inline void Command::set_max_records(::google::protobuf::uint32 value) {
  
  max_records_ = value;
  // @@protoc_insertion_point(field_set:zsearch.Command.max_records)
}

// uint32 start_ip = 5;
inline void Command::clear_start_ip() {
  start_ip_ = 0u;
}
inline ::google::protobuf::uint32 Command::start_ip() const {
  // @@protoc_insertion_point(field_get:zsearch.Command.start_ip)
  return start_ip_;
}
inline void Command::set_start_ip(::google::protobuf::uint32 value) {
  
  start_ip_ = value;
  // @@protoc_insertion_point(field_set:zsearch.Command.start_ip)
}

// uint32 stop_ip = 6;
inline void Command::clear_stop_ip() {
  stop_ip_ = 0u;
}
inline ::google::protobuf::uint32 Command::stop_ip() const {
  // @@protoc_insertion_point(field_get:zsearch.Command.stop_ip)
  return stop_ip_;
}
inline void Command::set_stop_ip(::google::protobuf::uint32 value) {
  
  stop_ip_ = value;
  // @@protoc_insertion_point(field_set:zsearch.Command.stop_ip)
}

// repeated .zsearch.MozillaOneCRLEntry one_crl_entries = 7;
inline int Command::one_crl_entries_size() const {
  return one_crl_entries_.size();
}
inline void Command::clear_one_crl_entries() {
  one_crl_entries_.Clear();
}
inline const ::zsearch::MozillaOneCRLEntry& Command::one_crl_entries(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.Command.one_crl_entries)
  return one_crl_entries_.Get(index);
}
inline ::zsearch::MozillaOneCRLEntry* Command::mutable_one_crl_entries(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.Command.one_crl_entries)
  return one_crl_entries_.Mutable(index);
}
inline ::zsearch::MozillaOneCRLEntry* Command::add_one_crl_entries() {
  // @@protoc_insertion_point(field_add:zsearch.Command.one_crl_entries)
  return one_crl_entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zsearch::MozillaOneCRLEntry >*
Command::mutable_one_crl_entries() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.Command.one_crl_entries)
  return &one_crl_entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zsearch::MozillaOneCRLEntry >&
Command::one_crl_entries() const {
  // @@protoc_insertion_point(field_list:zsearch.Command.one_crl_entries)
  return one_crl_entries_;
}

// uint32 threads = 8;
inline void Command::clear_threads() {
  threads_ = 0u;
}
inline ::google::protobuf::uint32 Command::threads() const {
  // @@protoc_insertion_point(field_get:zsearch.Command.threads)
  return threads_;
}
inline void Command::set_threads(::google::protobuf::uint32 value) {
  
  threads_ = value;
  // @@protoc_insertion_point(field_set:zsearch.Command.threads)
}

// -------------------------------------------------------------------

// AnonymousStoreStatistics

// uint64 total_records = 1;
inline void AnonymousStoreStatistics::clear_total_records() {
  total_records_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AnonymousStoreStatistics::total_records() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousStoreStatistics.total_records)
  return total_records_;
}
inline void AnonymousStoreStatistics::set_total_records(::google::protobuf::uint64 value) {
  
  total_records_ = value;
  // @@protoc_insertion_point(field_set:zsearch.AnonymousStoreStatistics.total_records)
}

// uint64 records_added_last_reset = 2;
inline void AnonymousStoreStatistics::clear_records_added_last_reset() {
  records_added_last_reset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AnonymousStoreStatistics::records_added_last_reset() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousStoreStatistics.records_added_last_reset)
  return records_added_last_reset_;
}
inline void AnonymousStoreStatistics::set_records_added_last_reset(::google::protobuf::uint64 value) {
  
  records_added_last_reset_ = value;
  // @@protoc_insertion_point(field_set:zsearch.AnonymousStoreStatistics.records_added_last_reset)
}

// uint64 records_updated_last_reset = 3;
inline void AnonymousStoreStatistics::clear_records_updated_last_reset() {
  records_updated_last_reset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AnonymousStoreStatistics::records_updated_last_reset() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousStoreStatistics.records_updated_last_reset)
  return records_updated_last_reset_;
}
inline void AnonymousStoreStatistics::set_records_updated_last_reset(::google::protobuf::uint64 value) {
  
  records_updated_last_reset_ = value;
  // @@protoc_insertion_point(field_set:zsearch.AnonymousStoreStatistics.records_updated_last_reset)
}

// uint64 records_unchanged_last_reset = 4;
inline void AnonymousStoreStatistics::clear_records_unchanged_last_reset() {
  records_unchanged_last_reset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AnonymousStoreStatistics::records_unchanged_last_reset() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousStoreStatistics.records_unchanged_last_reset)
  return records_unchanged_last_reset_;
}
inline void AnonymousStoreStatistics::set_records_unchanged_last_reset(::google::protobuf::uint64 value) {
  
  records_unchanged_last_reset_ = value;
  // @@protoc_insertion_point(field_set:zsearch.AnonymousStoreStatistics.records_unchanged_last_reset)
}

// uint64 records_received = 5;
inline void AnonymousStoreStatistics::clear_records_received() {
  records_received_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AnonymousStoreStatistics::records_received() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousStoreStatistics.records_received)
  return records_received_;
}
inline void AnonymousStoreStatistics::set_records_received(::google::protobuf::uint64 value) {
  
  records_received_ = value;
  // @@protoc_insertion_point(field_set:zsearch.AnonymousStoreStatistics.records_received)
}

// uint32 records_in_redis_queue = 6;
inline void AnonymousStoreStatistics::clear_records_in_redis_queue() {
  records_in_redis_queue_ = 0u;
}
inline ::google::protobuf::uint32 AnonymousStoreStatistics::records_in_redis_queue() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousStoreStatistics.records_in_redis_queue)
  return records_in_redis_queue_;
}
inline void AnonymousStoreStatistics::set_records_in_redis_queue(::google::protobuf::uint32 value) {
  
  records_in_redis_queue_ = value;
  // @@protoc_insertion_point(field_set:zsearch.AnonymousStoreStatistics.records_in_redis_queue)
}

// string redis_queue_name = 7;
inline void AnonymousStoreStatistics::clear_redis_queue_name() {
  redis_queue_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnonymousStoreStatistics::redis_queue_name() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousStoreStatistics.redis_queue_name)
  return redis_queue_name_.GetNoArena();
}
inline void AnonymousStoreStatistics::set_redis_queue_name(const ::std::string& value) {
  
  redis_queue_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.AnonymousStoreStatistics.redis_queue_name)
}
#if LANG_CXX11
inline void AnonymousStoreStatistics::set_redis_queue_name(::std::string&& value) {
  
  redis_queue_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.AnonymousStoreStatistics.redis_queue_name)
}
#endif
inline void AnonymousStoreStatistics::set_redis_queue_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  redis_queue_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.AnonymousStoreStatistics.redis_queue_name)
}
inline void AnonymousStoreStatistics::set_redis_queue_name(const char* value, size_t size) {
  
  redis_queue_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.AnonymousStoreStatistics.redis_queue_name)
}
inline ::std::string* AnonymousStoreStatistics::mutable_redis_queue_name() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.AnonymousStoreStatistics.redis_queue_name)
  return redis_queue_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnonymousStoreStatistics::release_redis_queue_name() {
  // @@protoc_insertion_point(field_release:zsearch.AnonymousStoreStatistics.redis_queue_name)
  
  return redis_queue_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnonymousStoreStatistics::set_allocated_redis_queue_name(::std::string* redis_queue_name) {
  if (redis_queue_name != NULL) {
    
  } else {
    
  }
  redis_queue_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redis_queue_name);
  // @@protoc_insertion_point(field_set_allocated:zsearch.AnonymousStoreStatistics.redis_queue_name)
}

// string queue_type = 8;
inline void AnonymousStoreStatistics::clear_queue_type() {
  queue_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnonymousStoreStatistics::queue_type() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousStoreStatistics.queue_type)
  return queue_type_.GetNoArena();
}
inline void AnonymousStoreStatistics::set_queue_type(const ::std::string& value) {
  
  queue_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.AnonymousStoreStatistics.queue_type)
}
#if LANG_CXX11
inline void AnonymousStoreStatistics::set_queue_type(::std::string&& value) {
  
  queue_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.AnonymousStoreStatistics.queue_type)
}
#endif
inline void AnonymousStoreStatistics::set_queue_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  queue_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.AnonymousStoreStatistics.queue_type)
}
inline void AnonymousStoreStatistics::set_queue_type(const char* value, size_t size) {
  
  queue_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.AnonymousStoreStatistics.queue_type)
}
inline ::std::string* AnonymousStoreStatistics::mutable_queue_type() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.AnonymousStoreStatistics.queue_type)
  return queue_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnonymousStoreStatistics::release_queue_type() {
  // @@protoc_insertion_point(field_release:zsearch.AnonymousStoreStatistics.queue_type)
  
  return queue_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnonymousStoreStatistics::set_allocated_queue_type(::std::string* queue_type) {
  if (queue_type != NULL) {
    
  } else {
    
  }
  queue_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), queue_type);
  // @@protoc_insertion_point(field_set_allocated:zsearch.AnonymousStoreStatistics.queue_type)
}

// uint32 worker_threads = 9;
inline void AnonymousStoreStatistics::clear_worker_threads() {
  worker_threads_ = 0u;
}
inline ::google::protobuf::uint32 AnonymousStoreStatistics::worker_threads() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousStoreStatistics.worker_threads)
  return worker_threads_;
}
inline void AnonymousStoreStatistics::set_worker_threads(::google::protobuf::uint32 value) {
  
  worker_threads_ = value;
  // @@protoc_insertion_point(field_set:zsearch.AnonymousStoreStatistics.worker_threads)
}

// -------------------------------------------------------------------

// StatisticsPair

// uint32 port = 1;
inline void StatisticsPair::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 StatisticsPair::port() const {
  // @@protoc_insertion_point(field_get:zsearch.StatisticsPair.port)
  return port_;
}
inline void StatisticsPair::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:zsearch.StatisticsPair.port)
}

// uint32 protocol = 2;
inline void StatisticsPair::clear_protocol() {
  protocol_ = 0u;
}
inline ::google::protobuf::uint32 StatisticsPair::protocol() const {
  // @@protoc_insertion_point(field_get:zsearch.StatisticsPair.protocol)
  return protocol_;
}
inline void StatisticsPair::set_protocol(::google::protobuf::uint32 value) {
  
  protocol_ = value;
  // @@protoc_insertion_point(field_set:zsearch.StatisticsPair.protocol)
}

// uint32 subprotocol = 3;
inline void StatisticsPair::clear_subprotocol() {
  subprotocol_ = 0u;
}
inline ::google::protobuf::uint32 StatisticsPair::subprotocol() const {
  // @@protoc_insertion_point(field_get:zsearch.StatisticsPair.subprotocol)
  return subprotocol_;
}
inline void StatisticsPair::set_subprotocol(::google::protobuf::uint32 value) {
  
  subprotocol_ = value;
  // @@protoc_insertion_point(field_set:zsearch.StatisticsPair.subprotocol)
}

// .zsearch.AnonymousStoreStatistics statistics = 4;
inline bool StatisticsPair::has_statistics() const {
  return this != internal_default_instance() && statistics_ != NULL;
}
inline void StatisticsPair::clear_statistics() {
  if (GetArenaNoVirtual() == NULL && statistics_ != NULL) delete statistics_;
  statistics_ = NULL;
}
inline const ::zsearch::AnonymousStoreStatistics& StatisticsPair::statistics() const {
  // @@protoc_insertion_point(field_get:zsearch.StatisticsPair.statistics)
  return statistics_ != NULL ? *statistics_
                         : *::zsearch::AnonymousStoreStatistics::internal_default_instance();
}
inline ::zsearch::AnonymousStoreStatistics* StatisticsPair::mutable_statistics() {
  
  if (statistics_ == NULL) {
    statistics_ = new ::zsearch::AnonymousStoreStatistics;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.StatisticsPair.statistics)
  return statistics_;
}
inline ::zsearch::AnonymousStoreStatistics* StatisticsPair::release_statistics() {
  // @@protoc_insertion_point(field_release:zsearch.StatisticsPair.statistics)
  
  ::zsearch::AnonymousStoreStatistics* temp = statistics_;
  statistics_ = NULL;
  return temp;
}
inline void StatisticsPair::set_allocated_statistics(::zsearch::AnonymousStoreStatistics* statistics) {
  delete statistics_;
  statistics_ = statistics;
  if (statistics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.StatisticsPair.statistics)
}

// -------------------------------------------------------------------

// StoreStatistics

// .zsearch.AnonymousStoreStatistics global = 1;
inline bool StoreStatistics::has_global() const {
  return this != internal_default_instance() && global_ != NULL;
}
inline void StoreStatistics::clear_global() {
  if (GetArenaNoVirtual() == NULL && global_ != NULL) delete global_;
  global_ = NULL;
}
inline const ::zsearch::AnonymousStoreStatistics& StoreStatistics::global() const {
  // @@protoc_insertion_point(field_get:zsearch.StoreStatistics.global)
  return global_ != NULL ? *global_
                         : *::zsearch::AnonymousStoreStatistics::internal_default_instance();
}
inline ::zsearch::AnonymousStoreStatistics* StoreStatistics::mutable_global() {
  
  if (global_ == NULL) {
    global_ = new ::zsearch::AnonymousStoreStatistics;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.StoreStatistics.global)
  return global_;
}
inline ::zsearch::AnonymousStoreStatistics* StoreStatistics::release_global() {
  // @@protoc_insertion_point(field_release:zsearch.StoreStatistics.global)
  
  ::zsearch::AnonymousStoreStatistics* temp = global_;
  global_ = NULL;
  return temp;
}
inline void StoreStatistics::set_allocated_global(::zsearch::AnonymousStoreStatistics* global) {
  delete global_;
  global_ = global;
  if (global) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.StoreStatistics.global)
}

// repeated .zsearch.StatisticsPair protocols = 2;
inline int StoreStatistics::protocols_size() const {
  return protocols_.size();
}
inline void StoreStatistics::clear_protocols() {
  protocols_.Clear();
}
inline const ::zsearch::StatisticsPair& StoreStatistics::protocols(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.StoreStatistics.protocols)
  return protocols_.Get(index);
}
inline ::zsearch::StatisticsPair* StoreStatistics::mutable_protocols(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.StoreStatistics.protocols)
  return protocols_.Mutable(index);
}
inline ::zsearch::StatisticsPair* StoreStatistics::add_protocols() {
  // @@protoc_insertion_point(field_add:zsearch.StoreStatistics.protocols)
  return protocols_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zsearch::StatisticsPair >*
StoreStatistics::mutable_protocols() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.StoreStatistics.protocols)
  return &protocols_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zsearch::StatisticsPair >&
StoreStatistics::protocols() const {
  // @@protoc_insertion_point(field_list:zsearch.StoreStatistics.protocols)
  return protocols_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ServerStatistics

// map<string, .zsearch.StoreStatistics> store_statistics = 1;
inline int ServerStatistics::store_statistics_size() const {
  return store_statistics_.size();
}
inline void ServerStatistics::clear_store_statistics() {
  store_statistics_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::zsearch::StoreStatistics >&
ServerStatistics::store_statistics() const {
  // @@protoc_insertion_point(field_map:zsearch.ServerStatistics.store_statistics)
  return store_statistics_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::zsearch::StoreStatistics >*
ServerStatistics::mutable_store_statistics() {
  // @@protoc_insertion_point(field_mutable_map:zsearch.ServerStatistics.store_statistics)
  return store_statistics_.MutableMap();
}

// map<string, .zsearch.AnonymousStoreStatistics> anonymous_store_statistics = 2;
inline int ServerStatistics::anonymous_store_statistics_size() const {
  return anonymous_store_statistics_.size();
}
inline void ServerStatistics::clear_anonymous_store_statistics() {
  anonymous_store_statistics_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::zsearch::AnonymousStoreStatistics >&
ServerStatistics::anonymous_store_statistics() const {
  // @@protoc_insertion_point(field_map:zsearch.ServerStatistics.anonymous_store_statistics)
  return anonymous_store_statistics_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::zsearch::AnonymousStoreStatistics >*
ServerStatistics::mutable_anonymous_store_statistics() {
  // @@protoc_insertion_point(field_mutable_map:zsearch.ServerStatistics.anonymous_store_statistics)
  return anonymous_store_statistics_.MutableMap();
}

// -------------------------------------------------------------------

// PruneStatistics

// .zsearch.AnonymousKey key = 1;
inline bool PruneStatistics::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void PruneStatistics::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::zsearch::AnonymousKey& PruneStatistics::key() const {
  // @@protoc_insertion_point(field_get:zsearch.PruneStatistics.key)
  return key_ != NULL ? *key_
                         : *::zsearch::AnonymousKey::internal_default_instance();
}
inline ::zsearch::AnonymousKey* PruneStatistics::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::zsearch::AnonymousKey;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.PruneStatistics.key)
  return key_;
}
inline ::zsearch::AnonymousKey* PruneStatistics::release_key() {
  // @@protoc_insertion_point(field_release:zsearch.PruneStatistics.key)
  
  ::zsearch::AnonymousKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline void PruneStatistics::set_allocated_key(::zsearch::AnonymousKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.PruneStatistics.key)
}

// uint64 records_pruned = 2;
inline void PruneStatistics::clear_records_pruned() {
  records_pruned_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PruneStatistics::records_pruned() const {
  // @@protoc_insertion_point(field_get:zsearch.PruneStatistics.records_pruned)
  return records_pruned_;
}
inline void PruneStatistics::set_records_pruned(::google::protobuf::uint64 value) {
  
  records_pruned_ = value;
  // @@protoc_insertion_point(field_set:zsearch.PruneStatistics.records_pruned)
}

// -------------------------------------------------------------------

// CommandReply

// .zsearch.CommandReply.CommandStatus status = 1;
inline void CommandReply::clear_status() {
  status_ = 0;
}
inline ::zsearch::CommandReply_CommandStatus CommandReply::status() const {
  // @@protoc_insertion_point(field_get:zsearch.CommandReply.status)
  return static_cast< ::zsearch::CommandReply_CommandStatus >(status_);
}
inline void CommandReply::set_status(::zsearch::CommandReply_CommandStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:zsearch.CommandReply.status)
}

// string error = 2;
inline void CommandReply::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandReply::error() const {
  // @@protoc_insertion_point(field_get:zsearch.CommandReply.error)
  return error_.GetNoArena();
}
inline void CommandReply::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.CommandReply.error)
}
#if LANG_CXX11
inline void CommandReply::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.CommandReply.error)
}
#endif
inline void CommandReply::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.CommandReply.error)
}
inline void CommandReply::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.CommandReply.error)
}
inline ::std::string* CommandReply::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.CommandReply.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandReply::release_error() {
  // @@protoc_insertion_point(field_release:zsearch.CommandReply.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandReply::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:zsearch.CommandReply.error)
}

// .zsearch.ServerStatistics stats = 3;
inline bool CommandReply::has_stats() const {
  return this != internal_default_instance() && stats_ != NULL;
}
inline void CommandReply::clear_stats() {
  if (GetArenaNoVirtual() == NULL && stats_ != NULL) delete stats_;
  stats_ = NULL;
}
inline const ::zsearch::ServerStatistics& CommandReply::stats() const {
  // @@protoc_insertion_point(field_get:zsearch.CommandReply.stats)
  return stats_ != NULL ? *stats_
                         : *::zsearch::ServerStatistics::internal_default_instance();
}
inline ::zsearch::ServerStatistics* CommandReply::mutable_stats() {
  
  if (stats_ == NULL) {
    stats_ = new ::zsearch::ServerStatistics;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.CommandReply.stats)
  return stats_;
}
inline ::zsearch::ServerStatistics* CommandReply::release_stats() {
  // @@protoc_insertion_point(field_release:zsearch.CommandReply.stats)
  
  ::zsearch::ServerStatistics* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline void CommandReply::set_allocated_stats(::zsearch::ServerStatistics* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.CommandReply.stats)
}

// repeated .zsearch.PruneStatistics prune_statistics = 4;
inline int CommandReply::prune_statistics_size() const {
  return prune_statistics_.size();
}
inline void CommandReply::clear_prune_statistics() {
  prune_statistics_.Clear();
}
inline const ::zsearch::PruneStatistics& CommandReply::prune_statistics(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.CommandReply.prune_statistics)
  return prune_statistics_.Get(index);
}
inline ::zsearch::PruneStatistics* CommandReply::mutable_prune_statistics(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.CommandReply.prune_statistics)
  return prune_statistics_.Mutable(index);
}
inline ::zsearch::PruneStatistics* CommandReply::add_prune_statistics() {
  // @@protoc_insertion_point(field_add:zsearch.CommandReply.prune_statistics)
  return prune_statistics_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zsearch::PruneStatistics >*
CommandReply::mutable_prune_statistics() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.CommandReply.prune_statistics)
  return &prune_statistics_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zsearch::PruneStatistics >&
CommandReply::prune_statistics() const {
  // @@protoc_insertion_point(field_list:zsearch.CommandReply.prune_statistics)
  return prune_statistics_;
}

// -------------------------------------------------------------------

// HostQuery

// fixed32 ip = 1;
inline void HostQuery::clear_ip() {
  ip_ = 0u;
}
inline ::google::protobuf::uint32 HostQuery::ip() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQuery.ip)
  return ip_;
}
inline void HostQuery::set_ip(::google::protobuf::uint32 value) {
  
  ip_ = value;
  // @@protoc_insertion_point(field_set:zsearch.HostQuery.ip)
}

// string domain = 2;
inline void HostQuery::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HostQuery::domain() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQuery.domain)
  return domain_.GetNoArena();
}
inline void HostQuery::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.HostQuery.domain)
}
#if LANG_CXX11
inline void HostQuery::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.HostQuery.domain)
}
#endif
inline void HostQuery::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.HostQuery.domain)
}
inline void HostQuery::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.HostQuery.domain)
}
inline ::std::string* HostQuery::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.HostQuery.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HostQuery::release_domain() {
  // @@protoc_insertion_point(field_release:zsearch.HostQuery.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HostQuery::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:zsearch.HostQuery.domain)
}

// uint32 port = 3;
inline void HostQuery::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 HostQuery::port() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQuery.port)
  return port_;
}
inline void HostQuery::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:zsearch.HostQuery.port)
}

// uint32 protocol = 4;
inline void HostQuery::clear_protocol() {
  protocol_ = 0u;
}
inline ::google::protobuf::uint32 HostQuery::protocol() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQuery.protocol)
  return protocol_;
}
inline void HostQuery::set_protocol(::google::protobuf::uint32 value) {
  
  protocol_ = value;
  // @@protoc_insertion_point(field_set:zsearch.HostQuery.protocol)
}

// uint32 subprotocol = 5;
inline void HostQuery::clear_subprotocol() {
  subprotocol_ = 0u;
}
inline ::google::protobuf::uint32 HostQuery::subprotocol() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQuery.subprotocol)
  return subprotocol_;
}
inline void HostQuery::set_subprotocol(::google::protobuf::uint32 value) {
  
  subprotocol_ = value;
  // @@protoc_insertion_point(field_set:zsearch.HostQuery.subprotocol)
}

// uint32 max_records = 6;
inline void HostQuery::clear_max_records() {
  max_records_ = 0u;
}
inline ::google::protobuf::uint32 HostQuery::max_records() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQuery.max_records)
  return max_records_;
}
inline void HostQuery::set_max_records(::google::protobuf::uint32 value) {
  
  max_records_ = value;
  // @@protoc_insertion_point(field_set:zsearch.HostQuery.max_records)
}

// -------------------------------------------------------------------

// HostQueryResponse

// .zsearch.HostQueryResponse.ResponseStatus status = 1;
inline void HostQueryResponse::clear_status() {
  status_ = 0;
}
inline ::zsearch::HostQueryResponse_ResponseStatus HostQueryResponse::status() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQueryResponse.status)
  return static_cast< ::zsearch::HostQueryResponse_ResponseStatus >(status_);
}
inline void HostQueryResponse::set_status(::zsearch::HostQueryResponse_ResponseStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:zsearch.HostQueryResponse.status)
}

// fixed32 ip = 2;
inline void HostQueryResponse::clear_ip() {
  ip_ = 0u;
}
inline ::google::protobuf::uint32 HostQueryResponse::ip() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQueryResponse.ip)
  return ip_;
}
inline void HostQueryResponse::set_ip(::google::protobuf::uint32 value) {
  
  ip_ = value;
  // @@protoc_insertion_point(field_set:zsearch.HostQueryResponse.ip)
}

// string domain = 3;
inline void HostQueryResponse::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HostQueryResponse::domain() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQueryResponse.domain)
  return domain_.GetNoArena();
}
inline void HostQueryResponse::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.HostQueryResponse.domain)
}
#if LANG_CXX11
inline void HostQueryResponse::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.HostQueryResponse.domain)
}
#endif
inline void HostQueryResponse::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.HostQueryResponse.domain)
}
inline void HostQueryResponse::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.HostQueryResponse.domain)
}
inline ::std::string* HostQueryResponse::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.HostQueryResponse.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HostQueryResponse::release_domain() {
  // @@protoc_insertion_point(field_release:zsearch.HostQueryResponse.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HostQueryResponse::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:zsearch.HostQueryResponse.domain)
}

// uint32 port = 4;
inline void HostQueryResponse::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 HostQueryResponse::port() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQueryResponse.port)
  return port_;
}
inline void HostQueryResponse::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:zsearch.HostQueryResponse.port)
}

// uint32 protocol = 5;
inline void HostQueryResponse::clear_protocol() {
  protocol_ = 0u;
}
inline ::google::protobuf::uint32 HostQueryResponse::protocol() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQueryResponse.protocol)
  return protocol_;
}
inline void HostQueryResponse::set_protocol(::google::protobuf::uint32 value) {
  
  protocol_ = value;
  // @@protoc_insertion_point(field_set:zsearch.HostQueryResponse.protocol)
}

// uint32 subprotocol = 6;
inline void HostQueryResponse::clear_subprotocol() {
  subprotocol_ = 0u;
}
inline ::google::protobuf::uint32 HostQueryResponse::subprotocol() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQueryResponse.subprotocol)
  return subprotocol_;
}
inline void HostQueryResponse::set_subprotocol(::google::protobuf::uint32 value) {
  
  subprotocol_ = value;
  // @@protoc_insertion_point(field_set:zsearch.HostQueryResponse.subprotocol)
}

// .zsearch.Record record = 7;
inline bool HostQueryResponse::has_record() const {
  return this != internal_default_instance() && record_ != NULL;
}
inline void HostQueryResponse::clear_record() {
  if (GetArenaNoVirtual() == NULL && record_ != NULL) delete record_;
  record_ = NULL;
}
inline const ::zsearch::Record& HostQueryResponse::record() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQueryResponse.record)
  return record_ != NULL ? *record_
                         : *::zsearch::Record::internal_default_instance();
}
inline ::zsearch::Record* HostQueryResponse::mutable_record() {
  
  if (record_ == NULL) {
    record_ = new ::zsearch::Record;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.HostQueryResponse.record)
  return record_;
}
inline ::zsearch::Record* HostQueryResponse::release_record() {
  // @@protoc_insertion_point(field_release:zsearch.HostQueryResponse.record)
  
  ::zsearch::Record* temp = record_;
  record_ = NULL;
  return temp;
}
inline void HostQueryResponse::set_allocated_record(::zsearch::Record* record) {
  delete record_;
  record_ = record;
  if (record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.HostQueryResponse.record)
}

// repeated .zsearch.Record records = 8;
inline int HostQueryResponse::records_size() const {
  return records_.size();
}
inline void HostQueryResponse::clear_records() {
  records_.Clear();
}
inline const ::zsearch::Record& HostQueryResponse::records(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.HostQueryResponse.records)
  return records_.Get(index);
}
inline ::zsearch::Record* HostQueryResponse::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.HostQueryResponse.records)
  return records_.Mutable(index);
}
inline ::zsearch::Record* HostQueryResponse::add_records() {
  // @@protoc_insertion_point(field_add:zsearch.HostQueryResponse.records)
  return records_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zsearch::Record >*
HostQueryResponse::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.HostQueryResponse.records)
  return &records_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zsearch::Record >&
HostQueryResponse::records() const {
  // @@protoc_insertion_point(field_list:zsearch.HostQueryResponse.records)
  return records_;
}

// string error = 9;
inline void HostQueryResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HostQueryResponse::error() const {
  // @@protoc_insertion_point(field_get:zsearch.HostQueryResponse.error)
  return error_.GetNoArena();
}
inline void HostQueryResponse::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.HostQueryResponse.error)
}
#if LANG_CXX11
inline void HostQueryResponse::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.HostQueryResponse.error)
}
#endif
inline void HostQueryResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.HostQueryResponse.error)
}
inline void HostQueryResponse::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.HostQueryResponse.error)
}
inline ::std::string* HostQueryResponse::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.HostQueryResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HostQueryResponse::release_error() {
  // @@protoc_insertion_point(field_release:zsearch.HostQueryResponse.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HostQueryResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:zsearch.HostQueryResponse.error)
}

// -------------------------------------------------------------------

// AnonymousQuery

// bytes sha256fp = 1;
inline void AnonymousQuery::clear_sha256fp() {
  sha256fp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnonymousQuery::sha256fp() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousQuery.sha256fp)
  return sha256fp_.GetNoArena();
}
inline void AnonymousQuery::set_sha256fp(const ::std::string& value) {
  
  sha256fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.AnonymousQuery.sha256fp)
}
#if LANG_CXX11
inline void AnonymousQuery::set_sha256fp(::std::string&& value) {
  
  sha256fp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.AnonymousQuery.sha256fp)
}
#endif
inline void AnonymousQuery::set_sha256fp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sha256fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.AnonymousQuery.sha256fp)
}
inline void AnonymousQuery::set_sha256fp(const void* value, size_t size) {
  
  sha256fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.AnonymousQuery.sha256fp)
}
inline ::std::string* AnonymousQuery::mutable_sha256fp() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.AnonymousQuery.sha256fp)
  return sha256fp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnonymousQuery::release_sha256fp() {
  // @@protoc_insertion_point(field_release:zsearch.AnonymousQuery.sha256fp)
  
  return sha256fp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnonymousQuery::set_allocated_sha256fp(::std::string* sha256fp) {
  if (sha256fp != NULL) {
    
  } else {
    
  }
  sha256fp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha256fp);
  // @@protoc_insertion_point(field_set_allocated:zsearch.AnonymousQuery.sha256fp)
}

// -------------------------------------------------------------------

// AnonymousQueryResponse

// bytes sha256fp = 1;
inline void AnonymousQueryResponse::clear_sha256fp() {
  sha256fp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnonymousQueryResponse::sha256fp() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousQueryResponse.sha256fp)
  return sha256fp_.GetNoArena();
}
inline void AnonymousQueryResponse::set_sha256fp(const ::std::string& value) {
  
  sha256fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.AnonymousQueryResponse.sha256fp)
}
#if LANG_CXX11
inline void AnonymousQueryResponse::set_sha256fp(::std::string&& value) {
  
  sha256fp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.AnonymousQueryResponse.sha256fp)
}
#endif
inline void AnonymousQueryResponse::set_sha256fp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sha256fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.AnonymousQueryResponse.sha256fp)
}
inline void AnonymousQueryResponse::set_sha256fp(const void* value, size_t size) {
  
  sha256fp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.AnonymousQueryResponse.sha256fp)
}
inline ::std::string* AnonymousQueryResponse::mutable_sha256fp() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.AnonymousQueryResponse.sha256fp)
  return sha256fp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnonymousQueryResponse::release_sha256fp() {
  // @@protoc_insertion_point(field_release:zsearch.AnonymousQueryResponse.sha256fp)
  
  return sha256fp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnonymousQueryResponse::set_allocated_sha256fp(::std::string* sha256fp) {
  if (sha256fp != NULL) {
    
  } else {
    
  }
  sha256fp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha256fp);
  // @@protoc_insertion_point(field_set_allocated:zsearch.AnonymousQueryResponse.sha256fp)
}

// .zsearch.AnonymousQueryResponse.ResponseStatus status = 2;
inline void AnonymousQueryResponse::clear_status() {
  status_ = 0;
}
inline ::zsearch::AnonymousQueryResponse_ResponseStatus AnonymousQueryResponse::status() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousQueryResponse.status)
  return static_cast< ::zsearch::AnonymousQueryResponse_ResponseStatus >(status_);
}
inline void AnonymousQueryResponse::set_status(::zsearch::AnonymousQueryResponse_ResponseStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:zsearch.AnonymousQueryResponse.status)
}

// .zsearch.AnonymousRecord record = 3;
inline bool AnonymousQueryResponse::has_record() const {
  return this != internal_default_instance() && record_ != NULL;
}
inline void AnonymousQueryResponse::clear_record() {
  if (GetArenaNoVirtual() == NULL && record_ != NULL) delete record_;
  record_ = NULL;
}
inline const ::zsearch::AnonymousRecord& AnonymousQueryResponse::record() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousQueryResponse.record)
  return record_ != NULL ? *record_
                         : *::zsearch::AnonymousRecord::internal_default_instance();
}
inline ::zsearch::AnonymousRecord* AnonymousQueryResponse::mutable_record() {
  
  if (record_ == NULL) {
    record_ = new ::zsearch::AnonymousRecord;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.AnonymousQueryResponse.record)
  return record_;
}
inline ::zsearch::AnonymousRecord* AnonymousQueryResponse::release_record() {
  // @@protoc_insertion_point(field_release:zsearch.AnonymousQueryResponse.record)
  
  ::zsearch::AnonymousRecord* temp = record_;
  record_ = NULL;
  return temp;
}
inline void AnonymousQueryResponse::set_allocated_record(::zsearch::AnonymousRecord* record) {
  delete record_;
  record_ = record;
  if (record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.AnonymousQueryResponse.record)
}

// repeated .zsearch.AnonymousRecord records = 4;
inline int AnonymousQueryResponse::records_size() const {
  return records_.size();
}
inline void AnonymousQueryResponse::clear_records() {
  records_.Clear();
}
inline const ::zsearch::AnonymousRecord& AnonymousQueryResponse::records(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousQueryResponse.records)
  return records_.Get(index);
}
inline ::zsearch::AnonymousRecord* AnonymousQueryResponse::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.AnonymousQueryResponse.records)
  return records_.Mutable(index);
}
inline ::zsearch::AnonymousRecord* AnonymousQueryResponse::add_records() {
  // @@protoc_insertion_point(field_add:zsearch.AnonymousQueryResponse.records)
  return records_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zsearch::AnonymousRecord >*
AnonymousQueryResponse::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.AnonymousQueryResponse.records)
  return &records_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zsearch::AnonymousRecord >&
AnonymousQueryResponse::records() const {
  // @@protoc_insertion_point(field_list:zsearch.AnonymousQueryResponse.records)
  return records_;
}

// string error = 59;
inline void AnonymousQueryResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnonymousQueryResponse::error() const {
  // @@protoc_insertion_point(field_get:zsearch.AnonymousQueryResponse.error)
  return error_.GetNoArena();
}
inline void AnonymousQueryResponse::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.AnonymousQueryResponse.error)
}
#if LANG_CXX11
inline void AnonymousQueryResponse::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.AnonymousQueryResponse.error)
}
#endif
inline void AnonymousQueryResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.AnonymousQueryResponse.error)
}
inline void AnonymousQueryResponse::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.AnonymousQueryResponse.error)
}
inline ::std::string* AnonymousQueryResponse::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.AnonymousQueryResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnonymousQueryResponse::release_error() {
  // @@protoc_insertion_point(field_release:zsearch.AnonymousQueryResponse.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnonymousQueryResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:zsearch.AnonymousQueryResponse.error)
}

// -------------------------------------------------------------------

// UserDataRequest

// fixed32 ip = 1;
inline void UserDataRequest::clear_ip() {
  ip_ = 0u;
}
inline ::google::protobuf::uint32 UserDataRequest::ip() const {
  // @@protoc_insertion_point(field_get:zsearch.UserDataRequest.ip)
  return ip_;
}
inline void UserDataRequest::set_ip(::google::protobuf::uint32 value) {
  
  ip_ = value;
  // @@protoc_insertion_point(field_set:zsearch.UserDataRequest.ip)
}

// string domain = 2;
inline void UserDataRequest::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserDataRequest::domain() const {
  // @@protoc_insertion_point(field_get:zsearch.UserDataRequest.domain)
  return domain_.GetNoArena();
}
inline void UserDataRequest::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zsearch.UserDataRequest.domain)
}
#if LANG_CXX11
inline void UserDataRequest::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zsearch.UserDataRequest.domain)
}
#endif
inline void UserDataRequest::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zsearch.UserDataRequest.domain)
}
inline void UserDataRequest::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zsearch.UserDataRequest.domain)
}
inline ::std::string* UserDataRequest::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:zsearch.UserDataRequest.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserDataRequest::release_domain() {
  // @@protoc_insertion_point(field_release:zsearch.UserDataRequest.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserDataRequest::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:zsearch.UserDataRequest.domain)
}

// .zsearch.UserdataAtom data = 3;
inline bool UserDataRequest::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void UserDataRequest::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::zsearch::UserdataAtom& UserDataRequest::data() const {
  // @@protoc_insertion_point(field_get:zsearch.UserDataRequest.data)
  return data_ != NULL ? *data_
                         : *::zsearch::UserdataAtom::internal_default_instance();
}
inline ::zsearch::UserdataAtom* UserDataRequest::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::zsearch::UserdataAtom;
  }
  // @@protoc_insertion_point(field_mutable:zsearch.UserDataRequest.data)
  return data_;
}
inline ::zsearch::UserdataAtom* UserDataRequest::release_data() {
  // @@protoc_insertion_point(field_release:zsearch.UserDataRequest.data)
  
  ::zsearch::UserdataAtom* temp = data_;
  data_ = NULL;
  return temp;
}
inline void UserDataRequest::set_allocated_data(::zsearch::UserdataAtom* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zsearch.UserDataRequest.data)
}

// -------------------------------------------------------------------

// RootStoreQuery

// .zsearch.RootStoreQuery.RootStoreQueryType type = 1;
inline void RootStoreQuery::clear_type() {
  type_ = 0;
}
inline ::zsearch::RootStoreQuery_RootStoreQueryType RootStoreQuery::type() const {
  // @@protoc_insertion_point(field_get:zsearch.RootStoreQuery.type)
  return static_cast< ::zsearch::RootStoreQuery_RootStoreQueryType >(type_);
}
inline void RootStoreQuery::set_type(::zsearch::RootStoreQuery_RootStoreQueryType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:zsearch.RootStoreQuery.type)
}

// -------------------------------------------------------------------

// RootStoreReply

// repeated .zsearch.Certificate certificates = 1;
inline int RootStoreReply::certificates_size() const {
  return certificates_.size();
}
inline void RootStoreReply::clear_certificates() {
  certificates_.Clear();
}
inline const ::zsearch::Certificate& RootStoreReply::certificates(int index) const {
  // @@protoc_insertion_point(field_get:zsearch.RootStoreReply.certificates)
  return certificates_.Get(index);
}
inline ::zsearch::Certificate* RootStoreReply::mutable_certificates(int index) {
  // @@protoc_insertion_point(field_mutable:zsearch.RootStoreReply.certificates)
  return certificates_.Mutable(index);
}
inline ::zsearch::Certificate* RootStoreReply::add_certificates() {
  // @@protoc_insertion_point(field_add:zsearch.RootStoreReply.certificates)
  return certificates_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zsearch::Certificate >*
RootStoreReply::mutable_certificates() {
  // @@protoc_insertion_point(field_mutable_list:zsearch.RootStoreReply.certificates)
  return &certificates_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zsearch::Certificate >&
RootStoreReply::certificates() const {
  // @@protoc_insertion_point(field_list:zsearch.RootStoreReply.certificates)
  return certificates_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace zsearch

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zsearch::CommandReply_CommandStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zsearch::CommandReply_CommandStatus>() {
  return ::zsearch::CommandReply_CommandStatus_descriptor();
}
template <> struct is_proto_enum< ::zsearch::HostQueryResponse_ResponseStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zsearch::HostQueryResponse_ResponseStatus>() {
  return ::zsearch::HostQueryResponse_ResponseStatus_descriptor();
}
template <> struct is_proto_enum< ::zsearch::AnonymousQueryResponse_ResponseStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zsearch::AnonymousQueryResponse_ResponseStatus>() {
  return ::zsearch::AnonymousQueryResponse_ResponseStatus_descriptor();
}
template <> struct is_proto_enum< ::zsearch::RootStoreQuery_RootStoreQueryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zsearch::RootStoreQuery_RootStoreQueryType>() {
  return ::zsearch::RootStoreQuery_RootStoreQueryType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rpc_2eproto__INCLUDED
