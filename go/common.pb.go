// Code generated by protoc-gen-go.
// source: common.proto
// DO NOT EDIT!

package censys_definitions

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DeltaType int32

const (
	DeltaType_DT_RESERVED  DeltaType = 0
	DeltaType_DT_UPDATE    DeltaType = 1
	DeltaType_DT_DELETE    DeltaType = 2
	DeltaType_DT_NO_CHANGE DeltaType = 3
)

var DeltaType_name = map[int32]string{
	0: "DT_RESERVED",
	1: "DT_UPDATE",
	2: "DT_DELETE",
	3: "DT_NO_CHANGE",
}
var DeltaType_value = map[string]int32{
	"DT_RESERVED":  0,
	"DT_UPDATE":    1,
	"DT_DELETE":    2,
	"DT_NO_CHANGE": 3,
}

func (x DeltaType) String() string {
	return proto.EnumName(DeltaType_name, int32(x))
}
func (DeltaType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type RegionalRegistrar int32

const (
	RegionalRegistrar_RIR_RESERVED RegionalRegistrar = 0
	RegionalRegistrar_RIR_ARIN     RegionalRegistrar = 1
	RegionalRegistrar_RIR_RIPE     RegionalRegistrar = 2
	RegionalRegistrar_RIR_APNIC    RegionalRegistrar = 3
	RegionalRegistrar_RIR_AFRINIC  RegionalRegistrar = 4
	RegionalRegistrar_RIR_LACNIC   RegionalRegistrar = 5
	RegionalRegistrar_RIR_UNKNOWN  RegionalRegistrar = 6
)

var RegionalRegistrar_name = map[int32]string{
	0: "RIR_RESERVED",
	1: "RIR_ARIN",
	2: "RIR_RIPE",
	3: "RIR_APNIC",
	4: "RIR_AFRINIC",
	5: "RIR_LACNIC",
	6: "RIR_UNKNOWN",
}
var RegionalRegistrar_value = map[string]int32{
	"RIR_RESERVED": 0,
	"RIR_ARIN":     1,
	"RIR_RIPE":     2,
	"RIR_APNIC":    3,
	"RIR_AFRINIC":  4,
	"RIR_LACNIC":   5,
	"RIR_UNKNOWN":  6,
}

func (x RegionalRegistrar) String() string {
	return proto.EnumName(RegionalRegistrar_name, int32(x))
}
func (RegionalRegistrar) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type Metadatum struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Metadatum) Reset()                    { *m = Metadatum{} }
func (m *Metadatum) String() string            { return proto.CompactTextString(m) }
func (*Metadatum) ProtoMessage()               {}
func (*Metadatum) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Metadatum) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Metadatum) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type UserdataAtom struct {
	PrivateNotes    string       `protobuf:"bytes,1,opt,name=private_notes,json=privateNotes" json:"private_notes,omitempty"`
	PublicNotes     string       `protobuf:"bytes,2,opt,name=public_notes,json=publicNotes" json:"public_notes,omitempty"`
	PrivateMetadata []*Metadatum `protobuf:"bytes,3,rep,name=private_metadata,json=privateMetadata" json:"private_metadata,omitempty"`
	PublicMetadata  []*Metadatum `protobuf:"bytes,4,rep,name=public_metadata,json=publicMetadata" json:"public_metadata,omitempty"`
	PrivateTags     []string     `protobuf:"bytes,5,rep,name=private_tags,json=privateTags" json:"private_tags,omitempty"`
	PublicTags      []string     `protobuf:"bytes,6,rep,name=public_tags,json=publicTags" json:"public_tags,omitempty"`
}

func (m *UserdataAtom) Reset()                    { *m = UserdataAtom{} }
func (m *UserdataAtom) String() string            { return proto.CompactTextString(m) }
func (*UserdataAtom) ProtoMessage()               {}
func (*UserdataAtom) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *UserdataAtom) GetPrivateNotes() string {
	if m != nil {
		return m.PrivateNotes
	}
	return ""
}

func (m *UserdataAtom) GetPublicNotes() string {
	if m != nil {
		return m.PublicNotes
	}
	return ""
}

func (m *UserdataAtom) GetPrivateMetadata() []*Metadatum {
	if m != nil {
		return m.PrivateMetadata
	}
	return nil
}

func (m *UserdataAtom) GetPublicMetadata() []*Metadatum {
	if m != nil {
		return m.PublicMetadata
	}
	return nil
}

func (m *UserdataAtom) GetPrivateTags() []string {
	if m != nil {
		return m.PrivateTags
	}
	return nil
}

func (m *UserdataAtom) GetPublicTags() []string {
	if m != nil {
		return m.PublicTags
	}
	return nil
}

type ASAtom struct {
	Asn          uint32            `protobuf:"varint,1,opt,name=asn" json:"asn,omitempty"`
	Description  string            `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Path         []uint32          `protobuf:"varint,3,rep,packed,name=path" json:"path,omitempty"`
	Rir          RegionalRegistrar `protobuf:"varint,4,opt,name=rir,enum=censys_definitions.RegionalRegistrar" json:"rir,omitempty"`
	BgpPrefix    string            `protobuf:"bytes,5,opt,name=bgp_prefix,json=bgpPrefix" json:"bgp_prefix,omitempty"`
	Name         string            `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	CountryCode  string            `protobuf:"bytes,7,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Organization string            `protobuf:"bytes,8,opt,name=organization" json:"organization,omitempty"`
}

func (m *ASAtom) Reset()                    { *m = ASAtom{} }
func (m *ASAtom) String() string            { return proto.CompactTextString(m) }
func (*ASAtom) ProtoMessage()               {}
func (*ASAtom) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ASAtom) GetAsn() uint32 {
	if m != nil {
		return m.Asn
	}
	return 0
}

func (m *ASAtom) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ASAtom) GetPath() []uint32 {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *ASAtom) GetRir() RegionalRegistrar {
	if m != nil {
		return m.Rir
	}
	return RegionalRegistrar_RIR_RESERVED
}

func (m *ASAtom) GetBgpPrefix() string {
	if m != nil {
		return m.BgpPrefix
	}
	return ""
}

func (m *ASAtom) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ASAtom) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *ASAtom) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func init() {
	proto.RegisterType((*Metadatum)(nil), "censys_definitions.Metadatum")
	proto.RegisterType((*UserdataAtom)(nil), "censys_definitions.UserdataAtom")
	proto.RegisterType((*ASAtom)(nil), "censys_definitions.ASAtom")
	proto.RegisterEnum("censys_definitions.DeltaType", DeltaType_name, DeltaType_value)
	proto.RegisterEnum("censys_definitions.RegionalRegistrar", RegionalRegistrar_name, RegionalRegistrar_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0x49, 0xd3, 0x96, 0xe5, 0x35, 0x5d, 0x8d, 0x85, 0x50, 0x2e, 0x13, 0xa5, 0x08, 0xa9,
	0xda, 0xa1, 0x87, 0xed, 0xc0, 0x39, 0x34, 0x19, 0xab, 0x28, 0x59, 0xe5, 0xa5, 0x70, 0x8c, 0xdc,
	0xc4, 0x0b, 0x11, 0x4d, 0x1c, 0x39, 0xee, 0x44, 0x39, 0x72, 0xe1, 0x9f, 0xe1, 0x8f, 0x44, 0xb6,
	0xd3, 0xaa, 0xd2, 0x38, 0x70, 0xaa, 0xdf, 0xcf, 0xdf, 0xfb, 0xfc, 0xbd, 0xa7, 0x06, 0xdc, 0x94,
	0x97, 0x25, 0xaf, 0x66, 0xb5, 0xe0, 0x92, 0x63, 0x9c, 0xb2, 0xaa, 0xd9, 0x37, 0x49, 0xc6, 0x1e,
	0x8a, 0xaa, 0x90, 0x05, 0xaf, 0x9a, 0xc9, 0x35, 0x38, 0x9f, 0x99, 0xa4, 0x19, 0x95, 0xbb, 0x12,
	0x23, 0xb0, 0xbf, 0xb3, 0xbd, 0x67, 0x8d, 0xad, 0xa9, 0x43, 0xd4, 0x11, 0xbf, 0x84, 0xde, 0x23,
	0xdd, 0xee, 0x98, 0xd7, 0xd1, 0xcc, 0x14, 0x93, 0x3f, 0x1d, 0x70, 0xd7, 0x0d, 0x13, 0x19, 0x95,
	0xd4, 0x97, 0xbc, 0xc4, 0x6f, 0x61, 0x58, 0x8b, 0xe2, 0x91, 0x4a, 0x96, 0x54, 0x5c, 0xb2, 0xa6,
	0xb5, 0x70, 0x5b, 0x18, 0x29, 0x86, 0xdf, 0x80, 0x5b, 0xef, 0x36, 0xdb, 0x22, 0x6d, 0x35, 0xc6,
	0x72, 0x60, 0x98, 0x91, 0xdc, 0x02, 0x3a, 0xf8, 0x94, 0x26, 0x15, 0xf5, 0xec, 0xb1, 0x3d, 0x1d,
	0x5c, 0x5d, 0xcc, 0x9e, 0x86, 0x9f, 0x1d, 0x93, 0x93, 0x51, 0xdb, 0xd6, 0x12, 0x8a, 0x6f, 0x60,
	0xd4, 0x3e, 0x76, 0x34, 0xea, 0xfe, 0x8f, 0xd1, 0xb9, 0xe9, 0x3a, 0xfa, 0xa8, 0xd0, 0x6d, 0x22,
	0x49, 0xf3, 0xc6, 0xeb, 0x8d, 0x6d, 0x1d, 0xda, 0xb0, 0x98, 0xe6, 0x0d, 0x7e, 0x0d, 0xed, 0x0c,
	0x46, 0xd1, 0xd7, 0x0a, 0x30, 0x48, 0x09, 0x26, 0xbf, 0x3b, 0xd0, 0xf7, 0xef, 0xf5, 0xa2, 0x10,
	0xd8, 0xb4, 0xa9, 0xf4, 0x7a, 0x86, 0x44, 0x1d, 0xf1, 0x18, 0x06, 0x19, 0x6b, 0x52, 0x51, 0xd4,
	0x2a, 0xca, 0x61, 0x29, 0x27, 0x08, 0xbf, 0x82, 0x6e, 0x4d, 0xe5, 0x37, 0xbd, 0x88, 0xe1, 0x87,
	0x0e, 0xb2, 0x88, 0xae, 0xf1, 0x7b, 0xb0, 0x45, 0x21, 0xbc, 0xee, 0xd8, 0x9a, 0x9e, 0x5f, 0xbd,
	0xfb, 0xd7, 0x58, 0x84, 0xe5, 0x05, 0xaf, 0xe8, 0x56, 0xfd, 0x36, 0x52, 0x50, 0x41, 0x54, 0x07,
	0xbe, 0x00, 0xd8, 0xe4, 0x75, 0x52, 0x0b, 0xf6, 0x50, 0xfc, 0xf0, 0x7a, 0xfa, 0x45, 0x67, 0x93,
	0xd7, 0x2b, 0x0d, 0x30, 0x86, 0x6e, 0x45, 0x4b, 0xe6, 0xf5, 0xf5, 0x85, 0x3e, 0xab, 0x35, 0xa4,
	0x7c, 0x57, 0x49, 0xb1, 0x4f, 0x52, 0x9e, 0x31, 0xef, 0xb9, 0x89, 0xd9, 0xb2, 0x39, 0xcf, 0x18,
	0x9e, 0x80, 0xcb, 0x45, 0x4e, 0xab, 0xe2, 0x27, 0xd5, 0x93, 0x9c, 0x99, 0xbf, 0xc0, 0x29, 0xbb,
	0x5c, 0x82, 0x13, 0xb0, 0xad, 0xa4, 0xf1, 0xbe, 0x66, 0x78, 0x04, 0x83, 0x20, 0x4e, 0x48, 0x78,
	0x1f, 0x92, 0x2f, 0x61, 0x80, 0x9e, 0xe1, 0x21, 0x38, 0x41, 0x9c, 0xac, 0x57, 0x81, 0x1f, 0x87,
	0xc8, 0x6a, 0xcb, 0x20, 0x5c, 0x86, 0x71, 0x88, 0x3a, 0x18, 0x81, 0x1b, 0xc4, 0x49, 0x74, 0x97,
	0xcc, 0x6f, 0xfd, 0xe8, 0x63, 0x88, 0xec, 0xcb, 0x5f, 0x16, 0xbc, 0x78, 0x32, 0xa2, 0xd2, 0x91,
	0x05, 0x39, 0xf5, 0x75, 0xe1, 0x4c, 0x11, 0x9f, 0x2c, 0x22, 0x64, 0x1d, 0x2a, 0xb2, 0x58, 0x29,
	0xd7, 0x21, 0x38, 0xfa, 0x6e, 0x15, 0x2d, 0xe6, 0xc8, 0x56, 0x99, 0x74, 0x79, 0x43, 0x16, 0x0a,
	0x74, 0xf1, 0x39, 0x80, 0x02, 0x4b, 0x7f, 0xae, 0xea, 0xde, 0x41, 0xb0, 0x8e, 0x3e, 0x45, 0x77,
	0x5f, 0x23, 0xd4, 0xdf, 0xf4, 0xf5, 0xb7, 0x75, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0xcd, 0xdb,
	0x07, 0x20, 0x6b, 0x03, 0x00, 0x00,
}
